(function(){angular.module("r1kApp",["ngSanitize","ui.router","angularFileUpload","ui.sortable","ngAnimate","ngMaterial","ngIdle","ngMessages","mm.foundation","ct.ui.router.extras"]).config(["$urlRouterProvider","$locationProvider","$idleProvider","$keepaliveProvider","$mdThemingProvider",function(a,b,c,d,e){var f,g;return a.otherwise("/"),b.html5Mode(!0),c.idleDuration(900),c.warningDuration(30),d.interval(30),g=e.extendPalette("deep-purple",{400:"4b1e78",500:"4b1e78"}),e.definePalette("revoPrimary",g),f=e.extendPalette("green",{A200:"259b24"}),e.definePalette("revoAccent",f),e.theme("default").primaryPalette("revoPrimary",{"hue-1":"400"}).accentPalette("revoAccent")}])}).call(this),function(){"use strict";angular.module("r1kApp").factory("Auth",["$window","$state","$idle","$rootScope","$keepalive","Device",function(a,b,c,d,e,f){var g,h,i,j;return g={},g.sessionID={},h=function(){return a.localStorage.clear(),g.sessionID={},f.sessionId(""),c.unwatch(),e.stop(),b.go("login")},i=function(b,c,e){return g.sessionID={id:c||g.sessionID.id,keepAlive:void 0!==e?e:g.sessionID.keepAlive,exp:b?Date.now()+1e3*~~b:g.sessionID.exp},a.localStorage.clear(),a.localStorage.revoUC1k_session=JSON.stringify(g.sessionID),f.sessionId(g.sessionID.id),d.sessionExp=0},j=function(){var b,c,e;return b=0,c=a.localStorage.revoUC1k_session,(g.sessionID.id||c)&&(g.sessionID=g.sessionID.id?g.sessionID:JSON.parse(c),e=Date.now(),!g.sessionID.exp||(g.sessionID.exp-e)/1e3/-60>15?d.timedOut=!0:(b=1,i())),b},d.$watch("sessionExp",function(a){return a?i(a):void 0}),d.$watch("timedOut",function(a){return a?g.logout():void 0}),g.hashPass=function(a){var b;return a?(b=forge.md.md5.create(),b.update(a),b.digest().toHex()):void 0},g.login=function(a,b,c){return i(a,b,~~c)},g.user=function(){return g.sessionID.keepAlive||j()},g.watch=function(){return g.sessionID.keepAlive?e.start():c.watch()},g.updateSession=function(){return f.request("requestProperties",{keepAlive:""}).then(function(a){return a.sessionId===g.sessionID.id?i(900):void 0})},g.logout=function(){return"login"!==b.current.name&&f.request("requestProperties",{logout:""}).then(function(a){return a.sessionId===g.sessionID.id?g.logout():void 0}),h()},g}])}.call(this),function(){"use strict";angular.module("r1kApp").config(["$stateProvider",function(a){return a.state("main.diag",{url:"diag",templateUrl:"app/diag/diag.html",controller:"DiagCtrl"})}]),angular.module("r1kApp").controller("DiagCtrl",["$scope","Device",function(a,b){return a.forms=diag.forms,a.diag=[],a.submitForm=function(c){var d;return d={},d[c]=a.diag[c]||"",b.request("requestStatus",d).then(function(){return a.buildToast("Command has been sent.")},function(){return a.buildToast("Uh oh! Couldn't send command. Is the device available?")})}}])}.call(this),function(){"use strict";angular.module("r1kApp").config(["$stateProvider",function(a){return a.state("dialog",{url:"/dialog","abstract":!0,template:"<ui-view/>",onEnter:["$mdDialog","$previousState",function(a,b){return a.show({template:'<md-dialog aria-label="Dialog" class="toolDialog"><md-content><ui-view/></md-content></md-dialog>',controller:["$scope","$mdDialog",function(a,b){return a.closeDialog=function(){return b.hide()}}]})["finally"](function(){return b.go()})}]})}])}.call(this),function(){"use strict";angular.module("r1kApp").config(["$stateProvider",function(a){return a.state("dialog.tool",{url:"/:toolID",templateUrl:"app/tools/tools.html",controller:"ToolsCtrl"})}])}.call(this),function(){"use strict";angular.module("r1kApp").config(["$stateProvider",function(a){return a.state("main.home",{url:"",templateUrl:"app/home/home.html",controller:"HomeCtrl"})}]),angular.module("r1kApp").controller("HomeCtrl",["$scope","$interval","Device",function(a,b,c){var d,e,f,g;return a.squares={system:{title:""},media:{title:""}},a.componentStatus=[{prop:"call.status.usb",label:"USB Call Status",cat:"media"},{prop:"audio.usb-audio-stream",label:"USB Audio Stream",cat:"media",type:"bin"},{prop:"cam.camera-status",label:"Camera",cat:"media",type:"upgrade",val:"sys.camera-upgrade-status"},{prop:"cam.camera-stream",label:"Stream",cat:"media",type:"bin"},{prop:"cam.camera-door",label:"Privacy Door",cat:"media",type:"bin"},{prop:"net.ip",label:"IP Address",cat:"system"},{prop:"sys.base-ver",label:"Software Version",cat:"system"},{prop:"sys.base-sernum",label:"Serial Number",cat:"system"},{prop:"net.mac",label:"MAC Address",cat:"system"},{prop:"sys.restart",label:"Restart Device",cat:"system",type:"btn"}],a.btData=[{prop:"bt.bt-name",label:"Bluetooth Name"},{prop:"bt.bt-mac",label:"Bluetooth MAC Address"},{prop:"call.status.bt",label:"Call Status",show:"bt.bt-connected"},{prop:"bt.bt-paired-list",label:"Paired Devices",type:"btnlist",btns:[{cmd:"bt.bt-disconnect",label:"Disconnect",conn:!0}],props:["Name","MAC Address"],headProp:"bt.bt-pair",headShowProp:"bt.bt-status",headBtns:[{name:"Pair",val:1,hideVal:"off"},{name:"Cancel Pairing",val:0,showVal:"pairing"},{name:"Unpair All Devices",prop:"bt.bt-unpair",val:"all"}]}],a.bleData=[{}],d=function(a){return"ble-standby"===a?"Disabled":"ble-advertising"===a?"Disconnected":"ble-connected"===a?"Connected":"unkown"},a.pairButton=function(b){return a.pairLabel=a.isPairing?"Cancel Pairing":"Pair",b?a.deviceCmd("bt.bt-pair",~~!a.isPairing):void 0},f=function(){var b,c;return a.btStatus=a.currentSettings["bt.bt-status"].toLowerCase(),a.btPct=~~a.currentSettings["sys.bt-upgrade-status"],a.btUpgrade=a.btPct>0,a.isBt="off"!==a.btStatus,a.btPaired=a.currentSettings["bt.bt-paired-list"].length>0,a.btConnected=0!==a.currentSettings["bt.bt-connected"],a.isPairing=~~("pairing"===a.btStatus),a.pairButton(),a.isBt&&a.btPaired&&a.btConnected?(b=a.currentSettings["bt.bt-connected"].split(" "),c=a.currentSettings["bt.bt-paired-list"].split(","),a.btPhones=[],angular.forEach(c,function(c){var d,e;return c.length?(e=c.indexOf(" "),d=[c.substr(0,e).trim(),c.substr(e).trim()],d.push(b[0]===d[0]),a.btPhones.push(d)):void 0})):void 0},e=function(){return a.bleStatus=d(a.currentSettings["ble.ble-status"]),a.isBle="off"!==a.bleStatus},f(),e(),g=b(function(){return c.request("requestStatus").then(function(b){return angular.forEach(b,function(b,c){return a.currentSettings[c]=b||""}),f(),e()})},2e3),a.upStr=function(a){var b;return b=a.slice(0,1).toUpperCase(),b+a.slice(1)},a.$on("$destroy",function(){return b.cancel(g)})}])}.call(this),function(){"use strict";angular.module("r1kApp").config(["$stateProvider",function(a){return a.state("login",{url:"/login",views:{root:{templateUrl:"app/login/login.html",controller:"LoginCtrl"}}})}]),angular.module("r1kApp").controller("LoginCtrl",["$scope","Auth","$state","$rootScope","Device","$timeout",function(a,b,c,d,e,f){var g,h;return h={noDevice:!1,noAuth:!1,required:!1},g={vp:"sys.validate-password",sid:"sessionId",exp:"sessionDur"},a.auth={token:"",saveSession:0,error:{timedOut:d.timedOut}},f(function(){return void 0!==a.token?a.maskPass(a.token):a.token=""},300),a.isLogin="loginBackground",a.productTitle="Device Manager",a.maskPass=function(c){return a.auth.token=b.hashPass(c)},a.login=function(){var f;return d.timedOut=!1,a.auth.error=angular.copy(h),a.auth.token.length?(f={},f[g.vp]=a.auth.token,e.request("requestProperties",f).then(function(d){return~~d[g.vp]?(b.login(d[g.exp],d[g.sid],a.auth.saveSession),c.go("main.home")):(a.auth.error.noAuth=!0,a.auth.token="")},function(){return a.auth.error.noDevice=!0})):a.auth.error.required=!0}}])}.call(this),function(){"use strict";angular.module("r1kApp").factory("Device",["$http","$q","$upload","$interval","$rootScope",function(a,b,c,d,e){var f,g,h,i;return i="",f={},f.sessionId=function(a){return i=a},f.baseUrl=function(a){return window.location.protocol+"//"+window.location.hostname+"/cgi-bin/cgiclient.cgi?"+a+(i?"=&sessionId="+i:"=")},f.request=function(c,d){var i,j,k;return j=b.defer(),k=f.baseUrl(c),i={url:k,method:"GET",params:"requestStatus"===c?d||h:d||g},a(i).success(function(a){var b,c,d;return d=new DOMParser,b=d.parseFromString(a,"application/xml"),c={},angular.forEach(b.getElementsByTagName("properties")[0].attributes,function(a){return"voip.dial-plan"===a.name&&(a.value=unescape(a.value)),c[a.name]=a.value}),~~c.sessionExpired?e.timedOut=!0:e.sessionExp=900,j.resolve(c)}).error(function(a){return j.reject(a)}),j.promise},f.update=function(a,g){var h,i;return h=b.defer(),i=c.upload({url:f.baseUrl(g),method:"POST",file:a}).progress(function(a){var b,c;return c=parseInt(100*a.loaded/a.total),b="upload",100===c&&"uploadFirmware"===g&&(b="init",c=-1),h.notify([c,b])}).success(function(a){var b,c,i,j,k,l;return"uploadFirmware"===g?(h.notify([-1,"init"]),j=0,l=15,i=d(function(){return f.request("requestStatus").then(function(a){var d,e;return e=a["sys.upgrade-status"],d=a["sys.config-import-status"],"rebooting"===d?(h.notify([-1,"reboot"]),b(i)):99>e?h.notify([e,"update"]):"WaitingCallEnd"===e?h.notify([e,"WaitingCallEnd"]):"Flashing"===e?h.notify([e,"Flashing"]):"Rebooting"===e||e>98?(h.notify([-1,"reboot"]),b(i),c()):(h.reject(),b(i))},function(){return h.reject(),b(i)})},3e3,0),b=function(a){return d.cancel(a)},k=function(a){return j++,j===l&&(h.reject("device"),b(a)),f.request("requestStatus").then(function(c){var d;return d=c["sys.upgrade-status"],"Ready"===d?(h.resolve(),b(a)):"Rebooting"===d?h.notify([-1,"reboot"]):void 0},function(){return h.notify([-1,"reboot"])})},c=function(){var a;return a=d(function(){return k(a)},2e4,l)}):(e.sessionExp=900,h.resolve(a))},function(){return h.reject()}),h.promise},g={"sys.ui-mask":"","sys.enable-deploy":"","sys.auto-deploy":"","sys.provisioning-interval":"","sys.ftp-srv1":"","sys.ftp-srv2":"","audio.ring-tone":"","audio.eq":"","audio.high-pass-filter":"","voip.codec1":"","voip.codec2":"","voip.codec3":"","voip.codec4":"","voip.codec5":"","voip.ptime":"","voip.mwi":"","voip.vm-number":"","voip.auto-answer":"","voip.do-not-disturb":"","voip.duration":"","voip.dial-plan":"","voip.always-forwarding":"","voip.always-forwarding-num":"","voip.busy-forwarding":"","voip.busy-forwarding-num":"","voip.noanswer-forwarding":"","voip.noanswer-forwarding-num":"","voip.noanswer-delay":"","sys.region":"","sys.time-zone":"","sys.twenty-four-hour-time":"","sys.date-format":"","sys.dst-enabled":"","sys.dst-start-rules":"","sys.dst-end-rules":"","net.dhcp":"","net.ip":"","net.subnet":"","net.gateway":"","net.dns1":"","net.dns2":"","net.ntp1":"","net.ntp2":"","net.ntp3":"","net.ntp4":"","net.ntp-enabled":"","net.vlan":"","net.vlan-id":"","net.dot1x-enabled":"","net.dot1x-auth-method":"","net.dot1x-anonymous-identity":"","net.dot1x-identity":"","net.dot1x-password":"","net.dot1x-cert-path":"","voip.registrar":"","voip.registrar-backup":"","voip.realm":"","voip.proxy":"","voip.reg-use-proxy":"","voip.user":"","voip.password":"","voip.id":"","voip.name":"","voip.reg-timeout":"","voip.rereg-delay":"","voip.use-timer":"","voip.timer-se":"","voip.timer-min-se":"","voip.use-100rel":"","voip.auto-update-nat":"","voip.no-refer-sub":"","voip.allow-strict":"","voip.min-size":"","voip.dtmf-method":"","voip.dtmf-rtp-payload-type":"","voip.media-onhold-method":"","voip.use-srtp":"","voip.rtp-port":"","voip.udp-tcp-selection":"","voip.local-port":"","voip.ip-addr":"","voip.stun-srv":"","voip.use-ice":"","voip.ice-regular":"","voip.ice-max-hosts":"","voip.ice-no-rtcp":"","voip.use-turn":"","voip.turn-srv":"","voip.turn-user":"","voip.turn-passwd":"","voip.turn-tcp":"","voip.set-qos":"","sys.verbose-log-enabled":"","sys.product":"","sys.base-ver":"","net.mac":"","sys.base-sernum":"","sys.voip-capable":"","sys.displaylink-capable":"","sys.systemname":"","sys.telnet-password":"","sys.require-https":"","sys.enable-btn-camera":"","sys.enable-btn-audio":"","sys.enable-btn-volume":"","sys.enable-btn-bluetooth":"","sys.enable-led-call":"","sys.enable-led-nfc":"","sys.power-saving-mode":"","sys.power-saving-time":"","sys.snmp-enable":"","sys.snmp-address":"","sys.snmp-community":"","sys.snmp-device-location":"","sys.snmp-contact-name":"","sys.aux-usb-ip":"","sys.aux-usb-subnet":"","sys.dialer-connection-mode":"","audio.analog-audio-in-mode":"","audio.analog-audio-in-gain":"","cam.camera-ptz-home":"","cam.camera-flicker":"","cam.cam-ptz-save-as-default":"","cam.cam-ptz-apply-defaults":"","cam.cam-image-save-as-default":"","cam.cam-image-apply-defaults":"","cam.camera-image-defaults":"","bt.bt-enable":"","bt.bt-mac":"","bt.bt-name":"","bt.bt-pin":"","bt.bt-pair-timeout":"","bt.bt-connect-timeout":"","bt.bt-autoconnect":"","ble.ble-advertise":"","ble.ble-pair-timeout":"","sys.enable-telnet":"","sys.recent-call-enabled":"","sys.language":"","ble.ble-status":"","ble.ble-paired":"","ble.ble-connected":"","bt.nfc-enable":""},h={"call.status.usb":"","call.status.bt":"","sys.upgrade-status":"","sys.config-import-status":"","sys.camera-upgrade-status":"","sys.bt-upgrade-status":"","sys.dialer-battery-state":"","audio.usb-audio-stream":"","cam.camera-status":"","cam.camera-stream":"","cam.camera-door":"","bt.bt-status":"","bt.bt-paired":"","bt.bt-paired-list":"","bt.bt-connected":"","ble.ble-status":"","ble.ble-paired":"","ble.ble-connected":"","cam.camera-pan":"","cam.camera-tilt":"","cam.camera-zoom":"","cam.camera-backlight":"","cam.camera-brightness":"","cam.camera-contrast":"","cam.camera-saturation":"","cam.camera-sharpness":"","cam.camera-hue":"","cam.camera-gamma":""},f}])}.call(this),function(){"use strict";angular.module("r1kApp").config(["$stateProvider",function(a){return a.state("main",{url:"/","abstract":!0,sticky:!0,deepStateRedirect:!0,views:{root:{templateUrl:"app/main/main.html",controller:"MainCtrl"}},resolve:{loadSettings:["Device",function(a){return a.request("requestProperties").then(function(b){return a.request("requestStatus").then(function(a){var c,d;return c=angular.extend({},b,a),d=Object.keys(c),function(){var a,b,e;return a={},e=[],angular.forEach(formData,function(b){var f,g,h,i,j,k,l,m,n,o,p,q;if(f=void 0===c[b.name]?"":c[b.name],j=d.indexOf(b.name),-1!==j&&d.splice(j,1),b.section&&e.indexOf(b.section)<0&&e.push(b.section),"number"===b.type||"range"===b.type||"checkbox"===b.type||"select"===b.type||"addCheckbox"===b.type||"tmp"===b.type)f=f.length>0&&f==Number(f)?Number(f):f,"checkbox"===b.type&&f.length>3&&(f="true"===f?1:0);else if("sortable"===b.type){for(f=[],p=[],angular.forEach(b.lists,function(){return p.push([])}),n=[],m=1,g=Object.keys(b.values).length;n.length<g;)void 0!==b.values[m]&&(o=c[b.name+m],i=~~o,h="",l=0,void 0===o||"0"===o?angular.forEach(b.values,function(a,b){return-1===n.indexOf(~~b)&&0===i?(h=a,i=~~b):void 0}):(l=i,h=b.values[i]),o>=0&&(a[b.name+m]=l,d.splice(d.indexOf(b.name+m),1)),n.push(i),k={value:i,label:h,setting:b.name},q=0!==l?0:1,p[q].push(k)),m++;angular.forEach(b.lists,function(a,b){return f[b]={name:a.name,props:p[b],req:a.req}})}return a[b.name]=f}),angular.forEach(d,function(b){return a[b]=c[b]}),b={settingsSections:e,currentSettings:a}}})})}]}})}]).run(["$rootScope","$state","Auth","$mdDialog","$idle","$window","Device",function(a,b,c,d,e,f){return a.$on("$stateChangeStart",function(a,d,e,f){var g;if((""===e.toolID||""===e.sectionId)&&a.preventDefault(),g=c.user(),!g||"login"!==d.name&&"dialog"!==d.name){if(!g&&"login"!==d.name)return a.preventDefault(),b.go("login")}else if(a.preventDefault(),!f.name.length)return b.go("main.home")}),a.$on("$stateChangeSuccess",function(a,c,d,e){return c.url!==e.url&&e.name.length>1&&0===c.name.search(/main/)&&-1===e.name.search(/dialog/)?b.reload():void 0}),a.$on("$stateNotFound",function(){return b.go("main.home")}),a.$on("$keepalive",function(){return"main.home"!==b.current.name?c.updateSession():void 0}),a.$on("$idleStart",function(){return f.scroll(0,0),d.show({clickOutsideToClose:!1,escapeToClose:!1,template:'<md-dialog aria-label="timeoutDialog"><md-content class="timeoutDialog"> <h2>Warning!</h2> <p>Your session will timeout soon unless user activity is detected.</p> <div class="progressCounter"><span>:</span>{{durTime}}</div> <md-progress-circular class="md-warn" mode="determinate" value="{{dur}}" md-diameter="100"></md-progress-circular> </md-content></md-dialog>',controller:"timeoutController"})}),a.$on("$idleTimeout",function(){return a.timedOut=!0,d.hide()}),a.$on("$idleEnd",function(){return c.updateSession(),d.hide()})}]).controller("timeoutController",["$scope",function(a){return a.dur=100,a.durTime="30",a.$on("$idleWarn",function(b,c){return a.dur=(c/30*100).toFixed(),a.durTime=10>c?"0"+c:c})}]),angular.module("r1kApp").controller("MainCtrl",["$scope","loadSettings","Device","$state","$stateParams","Auth","$mdDialog","$mdToast","$window",function(a,b,c,d,e,f,g,h,i){var j,k,l,m;return f.watch(),a.logout=function(){return f.logout()},m=b(),k=m.currentSettings,a.isLogin="appBackground",a.settingsSections=m.settingsSections,a.productTitle=k["sys.product"],a.formData=formData,a.currentSettings=angular.copy(k),a.tools=tools,a.isDiag="diag"===d.current.url?"activeView":"",a.isVoip=~~a.currentSettings["sys.voip-capable"],a.voipOnly=["calls","sip","transport"],a.toolsMenu=0,a.isVoip||(a.settingsSections=[],angular.forEach(m.settingsSections,function(b){return-1===a.voipOnly.indexOf(b)?a.settingsSections.push(b):void 0})),angular.forEach(a.tools,function(b){return b.menu&&b.show&&!a.currentSettings[b.show]&&(b.menu=void 0),b.menu?a.toolsMenu++:void 0}),a.settingsMenu=a.settingsSections.length,a.deviceCmd=function(b,c){return void 0!==c&&(a.currentSettings[b]=c),a.updateSettings([b],!0)},a.resetCurrentVal=function(a){return k[a]},a.buildToast=function(a,b){var c;return c={template:"<md-toast"+(b?' class="md-warn"':"")+">"+a+"</md-toast>",position:"right",parent:".childState"},h.show(c)},a.updateSettings=function(a,b,c,d){var e,f,h,k,m,n;return e=j(a,b,c),n=e[0],void 0!==n["voip.dial-plan"]&&(n["voip.dial-plan"]=unescape(n["voip.dial-plan"])),k=e[1],h="",m={reboot:"Performing this action requires rebooting the device. Would you like to continue?",reset:"Performing this action will reset all device settings back to factory default and requires rebooting the device. Would you like to continue?",recents:"Would you like to clear the recent call list?",bt:"Changing Bluetooth settings will interrupt any current Bluetooth connection. Would you like to continue?"},angular.forEach(k,function(a){return""===h&&(h=m[a]||""),("voip"===a||"sip"===a)&&(n["voip.voip-commit"]=""),"net"===a&&(n["net.net-commit"]=""),"reboot"===a?n["sys.restart"]="":void 0}),""!==h?(i.scroll(0,0),f=g.show({locals:{goUpdate:l,updateData:n,confirm:h,formCtrl:d},clickOutsideToClose:!1,escapeToClose:!1,disableParentScroll:!1,template:'<md-dialog aria-label="resetDialog"><md-content> <h2>Warning!</h2> <p class="warnMsg">{{confirmMsg}}</p> </md-content> <div class="md-actions"> <md-button class="md-raised" ng-click="close()">No</md-button> <md-button class="md-raised md-primary" ng-click="confirm()">Yes</md-button> </div> </md-dialog>',controller:"ResetController",onComplete:function(){return angular.element(document).find("body").css("overflow","hidden")}}),f.then(function(){return angular.element(document).find("body").css("overflow","initial")})):l(n)},j=function(b,c,d){var e,f;return f={},e=[],angular.forEach(b,function(b){var g;return g=void 0===a.currentSettings[b]?"":a.currentSettings[b],c||k[b]!==g?(d&&e.push(d[b]),f[b]=g):void 0}),[f,e]},l=function(b,f){return c.request("updateProperties",b).then(function(){var b;return void 0!==f&&f.$setPristine(),a.newSettings=[],b=d.transitionTo(d.current,e,{reload:!0,inherit:!0,notify:!0}),b.then(function(){return a.buildToast("Settings have been updated!")})},function(){return a.buildToast("Uh oh! Couldn't update settings. Is the device available?")})}}]).controller("ResetController",["$scope","$mdDialog","updateData","goUpdate","confirm","formCtrl",function(a,b,c,d,e,f){return a.close=function(){return b.hide()},a.confirm=function(){return d(c,f),b.hide()},a.confirmMsg=e}])}.call(this),function(){"use strict";angular.module("r1kApp").directive("matchTo",function(){return{restrict:"A",require:"ngModel",link:function(a,b,c,d){return d.$validators.match=function(b){return angular.isUndefined(b)||b===a.$eval(c.matchTo)},a.$watch(c.matchTo,function(a){return a?d.$validate():void 0})}}}).directive("form",function(){return{restrict:"E",link:function(a){return a.$watch("configForm.$submitted",function(b){return b&&Object.keys(a.configForm.$error).length>0?(a.configForm.$setPristine(),a.buildToast(a.configForm.$error.required?"Error! All required values must be provided.":"Error! Please correct invalid values.",1),angular.forEach(a.configForm.$error,function(a){return angular.forEach(a,function(a){return angular.forEach(a.$error,function(a){return a[0].$setTouched()})})})):void 0})}}}).directive("inputDisabled",function(){return{restrict:"A",require:"ngModel",link:function(a,b,c){return a.$watch(c.inputDisabled,function(a){return a?b.attr("disabled","true"):b.removeAttr("disabled")})}}}).directive("checkStep",function(){return{restrict:"A",require:"ngModel",link:function(a,b,c,d){return d.$validators.check=function(a){return c.checkStep>0?a%c.checkStep===0:!0}}}}).directive("hasValue",function(){return{restrict:"A",require:"ngModel",link:function(a,b,c,d){return d.$formatters.push(function(a){var c;return c=a.length>0,b.css("display",c?"block":"none"),c})}}}).directive("formatArray",function(){return{restrict:"A",require:"ngModel",link:function(a,b,c,d){return d.$parsers.push(function(a){var b,e,f;return b=c.formatArray||" ",f=d.$modelValue.split(b),e=~~c.index,f[e]=a,f.join(b)}),d.$formatters.push(function(a){var b,d,e;return b=c.formatArray||" ",e=a.split(b),d=~~c.index,"num"===c.output?~~e[c.index]:e[c.index]})}}}).directive("hashPass",function(){return{restrict:"A",require:"ngModel",link:function(a,b,c,d){return d.$validators.pattern=function(b,d){var e;return c.hashPass&&c.pattern&&d?(e=c.ngPattern.test(d),e||a.configForm.$setPristine(),e):!0},d.$formatters.push(function(a){return c.hashPass?"":a}),d.$parsers.push(function(b){return b||d.$setPristine(),c.hashPass&&b?a.hash(b):b||""})},controller:["$scope","Auth",function(a,b){return a.hash=function(a){return b.hashPass(a)}}]}}).directive("add",function(){return{restrict:"A",controller:["$scope",function(a){return a.prop=[],a.total=0,a.addProp=function(b,c){return void 0===a.prop[b]&&(a.prop[b]=[]),a.prop[b].unshift(c),a.total=0,angular.forEach(a.prop[b],function(b){return a.total+=~~b})}}]}}).directive("addTotal",function(){return{restrict:"A",require:["ngModel","^add"],link:function(a,b,c,d){var e;return e=d[0],a.addProp(c.name,c.addTotal),e.$formatters.push(function(a){var b;return b=a&~~c.addTotal,0!==b?1:0}),e.$parsers.push(function(b){var d,f;return d=~~e.$modelValue,f=0,d>a.total&&(angular.forEach(a.prop[c.name],function(a){var b;return b=d&~~a,f+=b}),d=f),1===b?d+~~c.addTotal:d-~~c.addTotal})}}}).directive("showMenu",function(){return{restrict:"A",controller:["$state","$scope","$rootScope",function(a,b,c){return c.$on("$stateChangeSuccess",function(c,d,e,f,g){return b.inactive="",a.includes("dialog")?b.inactive=a.href(f.name,g):d.name!==f.name?b.showSubMenu=d.name:void 0}),b.inactive="",b.showSubMenu=a.current.name,b.selectMenu=function(c){return b.showSubMenu=c||a.current.name,b.$applyAsync()}}]}}).directive("showSubMenu",function(){return{restrict:"A",require:"^^showMenu",link:function(a,b,c){return b.on("mouseenter",function(){return a.selectMenu(c.uiSref)}),b.on("mouseleave",function(){return b.hasClass("activeView")?void 0:a.selectMenu("")}),a.$watchGroup(["showSubMenu","inactive"],function(a){return c.uiSref!==a[0]||b.hasClass("activeView")?b.removeClass("showMenu"):b.addClass("showMenu")})}}}).directive("subMenu",["$state",function(a){return{restrict:"A",require:"^^showMenu",link:function(b,c,d){var e;return e=function(a){return d.subMenu!==a?c.addClass("ng-hide"):c.removeClass("ng-hide")},b.$watch("showSubMenu",function(a){return e(a)}),c.on("mouseenter",function(){return b.selectMenu(d.subMenu)}),c.on("mouseleave",function(){return d.subMenu!==a.current.name?b.selectMenu(""):void 0})}}}]).directive("subMenuParam",function(){return{restrict:"A",require:"^^showMenu",link:function(a,b,c){return a.$watch("inactive",function(a){return c.href!==a||b.hasClass("activeView")?b.removeClass("showMenu"):b.addClass("showMenu")})}}})}.call(this),function(){"use strict";angular.module("r1kApp").config(["$stateProvider",function(a){return a.state("main.settings",{url:"settings/","abstract":!0,template:"<ui-view/>"})}])}.call(this),function(){"use strict";angular.module("r1kApp").config(["$stateProvider",function(a){return a.state("main.settings.settingsForm",{url:":sectionId",templateUrl:"app/settings/settingsForm/settingsForm.html",controller:"SettingsformCtrl"})}]),angular.module("r1kApp").controller("SettingsformCtrl",["$scope","$stateParams","$state","$window","$interval","Device","$sce",function(a,b,c,d,e,f){var g,h,i,j;return a.currentSection=b.sectionId,a.vfields=[0],a.dst=dstValues,a.dstHours=dstHours,a.showSubmitButton=!0,a.disableSubmit=!0,a.statusProps=[],i="network"===a.currentSection,g=[],j={},a.cs=[{name:""}],angular.isUndefined(a.currentSection)&&c.go("main.home",{},{reload:!0,inherit:!1,notify:!0}),"camera"===a.currentSection&&(h=e(function(){return f.request("requestStatus").then(function(b){return angular.forEach(b,function(b,c){return a.currentSettings[c]=b||""})})},2e3)),angular.forEach(a.formData,function(b,c){return b.section===a.currentSection&&(void 0===b.field?a.formData[c].field=0:a.vfields.indexOf(b.field)<0&&(void 0!==b.show?a.currentSettings[b.show]&&a.vfields.push(b.field):a.vfields.push(b.field)),"multiNumber"===b.type&&"int"===b.dataType&&angular.forEach(b.values,function(b){return a.statusProps.push(b.name)}),"sortable"===b.type?angular.forEach(b.values,function(c,d){var e;return e=b.name+d,void 0!==a.currentSettings[e]?(j[e]=a.resetCurrentVal(e),g[e]=b.cb):void 0}):(j[b.name]=a.resetCurrentVal(b.name),a.currentSettings[b.name]=b.hash?"":a.currentSettings[b.name]||j[b.name]),b.cb)?g[b.name]=b.cb:void 0}),a.$watchCollection("currentSettings",function(){return a.newSettings=[],angular.forEach(j,function(b,c){return a.currentSettings[c]!==b?(a.configForm.$setDirty(),a.newSettings.push(c)):void 0})}),a.submitProps=function(){return a.configForm.$valid?(i&&(a.newSettings=Object.keys(j)),a.updateSettings(a.newSettings,i,g,a.configForm)):void 0},a.sortableErr={na:!1},a.dndSort={containment:".sortable",containerPositioning:"relative",accept:function(b){var c;return c=b.itemScope,c.$last&&c.$first&&angular.element(c.sortableScope.element).hasClass("required")?(a.sortableErr.na=!0,!1):!0},dragEnd:function(b){var c,d;return d=b.source.itemScope.modelValue.setting,c=0,angular.forEach(a.currentSettings[d],function(b,e){return angular.forEach(b.props,function(b){var f;return f=d+ ++c,void 0!==a.currentSettings[f]?a.currentSettings[f]=1===e?0:b.value:void 0})}),!a.sortableErr.na&&a.configForm.$pristine&&a.configForm.$setDirty(),a.sortableErr.na=!1}},a.uploadDialog=function(b,g,h){var i,j;return b.preventDefault(),d.scroll(0,0),j=c.current.name,i=c.go("dialog.tool",{toolID:g},{location:!1,inherit:!1}),i.then(function(){var b;return a.currentSettings[h].length<1?b=e(function(){return c.current.name===j?(e.cancel(b),f.request("requestProperties").then(function(b){return a.currentSettings[h]=b[h]})):void 0},5e3):void 0})},a.$on("$destroy",function(){return e.cancel(h)})}])}.call(this),function(){"use strict";angular.module("r1kApp").config(["$stateProvider",function(a){return a.state("main.tools",{url:"tools/:toolID",templateUrl:"app/tools/tools.html",controller:"ToolsCtrl"})}]),angular.module("r1kApp").controller("ToolsCtrl",["$scope","$stateParams","Device","$state","$mdDialog","$sce",function(a,b,c,d,e,f){var g,h,i;return i=tools[b.toolID||d.current.url],angular.isUndefined(i)?d.go("main.home",{},{reload:!0,inherit:!1,notify:!0}):(a.dialog=d.includes("dialog"),a.forms=i.forms,a.newSettings=[],a.cb=[],angular.forEach(a.forms,function(b){return angular.forEach(b.input,function(b,c){var d;return"file"!==b.type&&"form"!==b.type&&-1===a.newSettings.indexOf(c)&&("array"===b.type&&(d={},angular.forEach(b.values,function(a,b){return d[b]=0}),a.resets=d),a.newSettings.push(c),"checkbox"!==b.type)?a.currentSettings[c]="":void 0})})),a.resetDefaults=function(b){var c,d;return c=a.resets,c.all?(a.currentSettings[b]="all",a.cb["sys.reset-setting"]="reset"):(d=[],angular.forEach(c,function(a,b){return a?d.push(b):void 0}),a.currentSettings[b]=d.join(":"),a.cb=[])},h={noSubmit:!0,bundle:formData,errMsg:"",state:""},a.fileInfo=h,a.test="No",a.$watch("fileInfo.bundle",function(b){return void 0!==b.name?a.test="Yes":void 0}),a.dropFile=function(b,c){var d;return a.fileInfo=angular.copy(h),a.fileInfo.bundle=b[0],1===b.length?(d=!1,angular.isArray(c)?angular.forEach(c,function(a){return d?void 0:d=a.test(b[0].name)}):d=c.test(b[0].name),d?(a.fileInfo.noSubmit=!1,a.fileInfo.state="valid"):(a.fileInfo.errMsg="This file does not appear to be the correct extension.",a.fileInfo.state="error")):(a.fileInfo.errMsg="Sorry, but only a single file can be uploaded.",a.fileInfo.state="error")},a.submitForm=function(a){return f.trustAsResourceUrl(c.baseUrl(a))},a.updateFirmware2=function(b){var c;return a.configChk=!0,c=e.show({locals:{type:b,file:a.fileInfo.bundle,dialog:a.dialog,configChk:a.configChk,globalUpdateFirmware:g},clickOutsideToClose:!1,escapeToClose:!1,template:'<md-dialog aria-label="resetDialog"><md-content> <h2>Warning!</h2> <p class="warnMsg">Performing this action may require rebooting the device. Would you like to continue?</p> </md-content> <div class="md-actions"> <md-button class="md-raised" ng-click="close()">No</md-button> <md-button class="md-raised md-primary" ng-click="confirm()">Yes</md-button> </div> </md-dialog>',controller:"warning",onComplete:function(){return angular.element(document).find("body").css("overflow","visible"),angular.element(document).find("md-dialog-container").css("margin","auto"),angular.element(document).find("md-dialog-container").css("width","50%")}}),c.then(function(){return angular.element(document).find("body").css("overflow","initial")})},a.updateFirmware=function(b){return e.show({locals:{type:b,file:a.fileInfo.bundle,dialog:a.dialog},clickOutsideToClose:!1,escapeToClose:!1,template:'<md-dialog aria-label="Alert" class="toolDialog"><md-content><div> <h6 class="progressMessage">{{upgrader.message}}</h6> <div class="dialogContent" ng-show="upgrader.show"> <span class="progressValue" ng-show="upgrader.total > 0"><strong>{{upgrader.total}}</strong><span>%</span></span> <md-progress-circular md-mode="indeterminate" md-diameter="110" class="outerProgress"></md-progress-circular> </div> <h6 class="versionMessage" ng-show="version.length > 0">v{{version}}</h6> </div></md-content> <md-button class="md-action md-raised md-primary" ng-if="confirm" ng-click="hideDialog()">OK</md-button></md-dialog>',controller:"notifyCtrl"}),a.fileInfo=h},g=function(b){return e.show({locals:{type:b,file:a.fileInfo.bundle,dialog:a.dialog},clickOutsideToClose:!1,escapeToClose:!1,template:'<md-dialog aria-label="Alert" class="toolDialog"><md-content><div> <h6 class="progressMessage">{{upgrader.message}}</h6> <div class="dialogContent" ng-show="upgrader.show"> <span class="progressValue" ng-show="upgrader.total > 0"><strong>{{upgrader.total}}</strong><span>%</span></span> <md-progress-circular md-mode="indeterminate" md-diameter="110" class="outerProgress"></md-progress-circular> </div> <h6 class="versionMessage" ng-show="version.length > 0">v{{version}}</h6> </div></md-content> <md-button class="md-action md-raised md-primary" ng-if="confirm" ng-click="hideDialog()">OK</md-button></md-dialog>',controller:"notifyCtrl"}),a.fileInfo=h}}]).controller("notifyCtrl",["$scope","Device","type","file","$mdDialog","$state","$window","$timeout","dialog",function(a,b,c,d,e,f,g,h,i){var j,k,l,m,n,o,p;return g.scroll(0,0),o=function(){switch(c){case"uploadFirmware":return"Device has successfully been updated! App will be refreshed now.";
case"importContacts":return"Contacts have been successfully imported!";case"importConfig":return"Device configuration has been successfully imported! For security, some SIP account settings aren't imported and must be provided to register with the SIP server.";default:return"Upload successfully completed!"}}(),m={begin:"Uploading file.",upload:"importConfig"===c?"Applying new configuration.":"File upload complete.",init:"Update initializing.",update:"Device is updating.",WaitingCallEnd:"Update waiting for active call(s) to end.",Flashing:"Update in progress.",reboot:"Update complete! Rebooting device.",success:o,error:"Process could not be completed. Please check the device.",device:"Update has successfully completed but the device is unavailable. Please check the device IP address."},n=!1,l="",a.confirm=!1,a.version="","uploadFirmware"===c&&(j=d.name,j.search(/(FLX)/)>-1&&j.search(/-/)>-1&&(p=j.substr(0,j.search(/[^A-Za-z0-9-]/)),a.version=p.replace(/(?:[^-]+-){3}(\d+)-(\d+)-(\d+)-(\d+)-?/g,"$1.$2.$3.$4"))),a.hideDialog=function(){return e.hide(),n?f.go("main.home").then(function(){return g.location.reload(!0)}):i?void 0:f.reload()},a.upgrader={message:m.begin,total:0,show:1},b.update(d,c).then(function(){var b;return a.upgrader.total=100,b="success","uploadFirmware"===c?(a.upgrader.message=m[b],n=!0,h(a.hideDialog,5e3)):(k(b),a.upgrader.show=0)},function(b){return a.version="",a.upgrader.show=0,b&&console.log("err",b),k(b?b:"error")},function(b){return a.upgrader.message=m[b[1]],"uploadFirmware"!==c?a.upgrader.total=b[0]:"upload"!==b[1]?a.upgrader.total="update"===b[1]?b[0]:0:b[0]<100?a.upgrader.message=m.begin:void 0}),k=function(b){return a.upgrader.message=m[b]||b,a.confirm=!0}}]).controller("warning",["$scope","globalUpdateFirmware","Device","file","configChk","type","$mdDialog",function(a,b,c,d,e,f,g){return e=!0,a.close=function(){return g.hide()},a.confirm=function(a,c){return b(f,c)}}])}.call(this);var callCodecs={1:"G.722",2:"G.711 µ-law (PCMU)",3:"G.711 A-law (PCMA)",4:"G.726",5:"G.729"},diag={forms:[{title:"DSP Status",type:"form",info:'This command will cause the DSP to report status in the support logs. After issuing this command, click <a href="/tools/logs">HERE</a> to download the logs from the Tools > Logs page.',cmd:"dsp.dump"},{title:"Command",type:"input",cmd:"dsp.web-cmd"}]},tools={update:{menu:"Update",forms:[{submitLabel:"Update firmware",input:{bundle:{type:"file",accept:[/.+\.\d+$/,/.+\.bundle$/,/.+\.img$/],info:"Firmware file should be named *.img. Please contact Revolabs for firmware file or assistance with updating if needed.",reqType:"uploadFirmware"}}}]},contacts:{menu:"Contacts",show:"sys.voip-capable",forms:[{submitLabel:"Export Contacts",input:{"export":{type:"form",reqType:"exportContacts",info:"Export saved contacts to a CSV file. The exported file can be imported to other devices or applications, or it can be used to edit contact details. To update edited contacts, use the import function below. NOTE: Contacts can be updated and added via import; however, to delete a contact you must use the dialer."}}},{submitLabel:"Import Contacts",input:{"import":{type:"file",label:"Upload Contacts",accept:/.+\.csv$/,info:"Contacts file must be a CSV file.",reqType:"importContacts"}}}]},config:{menu:"Configuration",forms:[{submitLabel:"Export Configuration",input:{config:{type:"form",info:"Export device configuration to an XML file. This will export all settings except the system password and the SIP password.",reqType:"exportConfig"}}},{submitLabel:"Import Configuration",input:{"import":{type:"file",accept:/.+\.xml$/,info:"Configuration file must be an XML file that was exported from another device.",reqType:"importConfig"}}},{submitLabel:"Reset Defaults",info:"Select which values to reset.",input:{"sys.reset-setting":{type:"array",values:{voip:"SIP settings",contacts:"Contacts",recents:"Call history",audio:"Audio settings",network:"Network settings",camera:"Camera settings",bluetooth:"Bluetooth settings",all:"Restore ALL defaults"}}}}]},logs:{menu:"Logs",forms:[{submitLabel:"Download Logs",input:{logs:{type:"form",info:"Download support logs if requested by Revolabs technical support. Enable verbose logging below if needed.",reqType:"requestSupportLog"}}},{submitLabel:"Submit",title:!1,input:{"sys.verbose-log-enabled":{type:"checkbox",label:"Enable verbose logging"}}}]},dot1x:{forms:[{submitLabel:"Upload certificate",input:{cert:{type:"file",accept:[/.+\.pem$/,/.+\.der$/,/.+\.cet$/,/.+\.crt$/],info:"Certificate file should be named *.pem, *.der, *.crt, or *.cer. Please contact Revolabs for assistance with if needed.",reqType:"uploadDot1xCert"}}}]}},formData=[{name:"sys.md5-password",section:"admin",label:"System password",defaultVal:"7386",type:"password",hash:1,pattern:/^(\d{4,64})$/,info:"The password is used to control access to the web interface and the advanced Administrator settings on the device. The password may only contain digits, and must be at least 4 characters, but less than 65 characters. The default password is 7386. This password should be changed by the system administrator. Please ensure that you take note of the changed password."},{name:"sys.systemname",section:"admin",label:"System name",type:"text",info:"Specifies the system name. By default, this is set to the device's MAC address."},{name:"sys.recent-call-enabled",section:"admin",field:"Security",label:"Enable call history",defaultVal:1,type:"checkbox",cb:"recents",info:"Use this option to enable or disable the call history list. By default this is enabled."},{name:"sys.require-https",section:"admin",field:"Security",label:"Require HTTPS",type:"checkbox",defaultVal:0,info:"Use the Require HTTPS option to enable or disable the HTTPS-only device web application. When set to on, the web application is only accessible via HTTPS, which ensures all web traffic is encrypted by full 256-bit AES encryption end-to-end. NOTE: When accessing the HTTPS web application, the browser may show a security warning, which must be bypassed. To disable the security warning, this must be set to Off. When set to Off, the web application is accessible using HTTP, which is insecure and does not provide any encryption of web traffic. The default setting is Off."},{name:"sys.ui-mask",section:"admin",field:"Dialer Restrictions",type:"addCheckbox",values:{8:"Disable call history modification",16:"Disable contacts modification",32:"Disable Do not Disturb (DnD) setting"},info:"Use this option to disable this feature in the dialer UI. Changes can only be made from the web UI. To fully restrict user access, disable web access as well. By default this is unchecked."},{name:"sys.enable-telnet",section:"admin",field:"Security",label:"Enable telnet access",type:"checkbox",cb:"reboot",info:"Enable telnet access to the device. Changing this setting requires a device reboot. By default, this is disabled."},{name:"sys.telnet-password",section:"admin",field:"Security",label:"Telnet password",type:"telnet-password",info:"The password is used with roomcontrol",show:"sys.enable-telnet"},{name:"sys.enable-btn-camera",section:"admin",field:"Front Panel",label:"Enable camera button",type:"checkbox",info:"Enable/disable camera button on the front panel. By default, this is is enabled."},{name:"sys.enable-btn-audio",section:"admin",field:"Front Panel",label:"Enable audio button",type:"checkbox",info:"Enable/disable audio button on the front panel. By default, this is is enabled."},{name:"sys.enable-btn-volume",section:"admin",field:"Front Panel",label:"Enable volume buttons",type:"checkbox",info:"Enable/disable volume buttons on the front panel. By default, this is is enabled."},{name:"sys.enable-btn-bluetooth",section:"admin",field:"Front Panel",label:"Enable bluetooth button",type:"checkbox",info:"Enable/disable bluetooth button on the front panel. By default, this is is enabled."},{name:"sys.enable-led-call",section:"admin",field:"Front Panel",label:"Enable call light",type:"checkbox",info:"Enable/disable call status LED on the front panel. By default, this is is enabled."},{name:"sys.power-saving-mode",section:"admin",field:"Power Saving",label:"Enable power saving mode",type:"checkbox",info:"Enable/disable power saving mode setting. By default, this is is enabled."},{name:"sys.power-saving-time",section:"admin",field:"Power Saving",label:"Timeout (minutes)",type:"number",defaultVal:20,show:"sys.power-saving-mode",info:"Configure power saving timeout in minutes. After this period elapses with no usage, the device will enter power saving mode. By default, this is is set to 20 minutes."},{name:"sys.snmp-enable",section:"admin",field:"SNMP",label:"Enable SNMP",type:"checkbox",info:"Specifies SNMP access for the device. Disabled: the SNMP agent on the device is not running. Enabled: SNMP is available and the snmp-server property indicates the SNMP server address. By default, this is is set to Disabled.",cb:"net"},{name:"sys.snmp-address",section:"admin",field:"SNMP",label:"Server address",type:"ipAddress",subOpt:{id:"sys.snmp-enable",val:1},info:"Specifies SNMP server IP address when SNMP is set to enabled. Port 162 needs to be open on the server to get traps.",cb:"net"},{name:"sys.snmp-community",section:"admin",field:"SNMP",label:"Read-only community",type:"text",subOpt:{id:"sys.snmp-enable",val:1},info:"Specifies SNMP read-only community string when SNMP is set to enabled.",cb:"net"},{name:"sys.snmp-device-location",section:"admin",field:"SNMP",label:"Device location",type:"text",subOpt:{id:"sys.snmp-enable",val:1},info:"Specifies SNMP device location when SNMP is set to enabled.",cb:"net"},{name:"sys.snmp-contact-name",section:"admin",field:"SNMP",label:"Contact name",type:"text",subOpt:{id:"sys.snmp-enable",val:1},info:"Specifies SNMP contact name when SNMP is set to enabled.",cb:"net"},{name:"sys.enable-deploy",section:"admin",field:"Deployment Server",label:"Enable deployment server",type:"checkbox",info:"When enabled, the system can be configured to use a deployment server. By default this is enabled."},{name:"sys.auto-deploy",section:"admin",field:"Deployment Server",label:"Enable automatic server discovery",type:"checkbox",show:"sys.enable-deploy",info:"When enabled, the system can be configured to automatically detect a deployment server via DHCP option 66 or the administrator can manually specify a deployment server address. By default this is enabled."},{name:"sys.provisioning-interval",section:"admin",field:"Deployment Server",label:"Provisioning interval (minutes)",defaultVal:1440,type:"range",max:44640,min:1,show:"sys.enable-deploy",info:"Specify the provisioning interval for the device, in minutes. The default value is 1,440 (1 day), and the maximum interval is 44,640 (31 days)."},{name:"sys.ftp-srv1",section:"admin",field:"Deployment Server",label:"Primary server",pattern:/^(https?|ftp):\/\/[^\s\/$.?#].[^\s]*$/,patternMsg:"Please enter a valid IP address or domain name.",placeholder:"IP Address",subOpt:{parent:"sys.enable-deploy",id:"sys.auto-deploy",val:0},required:1,info:"If the deployment server is enabled but auto discovery is disabled, the administrator must manually specify a deployment server address. The primary server is required."},{name:"sys.ftp-srv2",section:"admin",field:"Deployment Server",label:"Secondary server",pattern:/^(https?|ftp):\/\/[^\s\/$.?#].[^\s]*$/,patternMsg:"Please enter a valid IP address or domain name.",placeholder:"IP Address",subOpt:{parent:"sys.enable-deploy",id:"sys.auto-deploy",val:0},info:"If the deployment server is enabled but auto discovery is disabled, the administrator must manually specify a deployment server address. The secondary server is optional."},{name:"audio.analog-audio-in-mode",section:"audio",field:"TV Audio-In",label:"Enable manual gain",type:"checkbox",defaultVal:0,info:"Enable/disable manual gain for the TV audio in port. When disabled, gain is automatically determined, and when enabled, the gain value must be manually specified. By default, this is disabled."},{name:"audio.analog-audio-in-gain",section:"audio",field:"TV Audio-In",label:"Manual gain",type:"range",min:-12,max:40,step:.5,defaultVal:4.5,show:"audio.analog-audio-in-mode",info:"For the TV audio in port, specify the manual gain setting in dB. By default, this is set to 4.5dB."},{name:"voip.codec",section:"audio",field:"Media",label:"Audio codec",type:"sortable",lists:[{name:"Enabled",req:1},{name:"Disabled"}],values:callCodecs,cb:"sip",info:"Drag and drop to sort audio codecs by priority. There must be at least one codec supported. The default supported codec priority are: G.722, G.711 µ-law (PCMU), G.711 A-law (PCMA), G.726, and G.729. If fewer codecs are desired, drag the unused codecs into 'Disabled'.",show:"sys.voip-capable"},{name:"voip.ptime",section:"audio",field:"Media",label:"Codec ptime override (ms)",defaultVal:20,type:"range",min:10,max:60,step:10,cb:"sip",info:"The ptime (packetization interval) value for a codec determines the length of time in milliseconds represented by the media in an RTP packet which is used to transmit audio traffic. The valid range is 10-60 in 10 ms increments. For all of the codecs supported by the device, the default ptime value is 20 ms/packet.",show:"sys.voip-capable"},{name:"audio.eq",section:"audio",label:"Equalizer",type:"select",values:[{val:1,label:"Voice Enhance"},{val:2,label:"Bass Boost"},{val:3,label:"Treble Boost"}],info:"Adjust the speaker frequency response to your preference for the room and the types of calls. Voice Enhance is the default value."},{name:"audio.high-pass-filter",section:"audio",label:"High pass filter",type:"select",values:[{val:0,label:"None"},{val:1,label:"110 Hz"},{val:2,label:"140 Hz"},{val:3,label:"175 Hz"},{val:4,label:"225 Hz"}],info:"High pass filters are provided to adjust the microphones frequency response to room and application requirements. Use the High-Pass filter in rooms that have a high background noise in the low frequencies (air conditioning, lighting fixtures, etc.). All filters are biquad filters, reducing the signal by 6dB per octave. By default this is disabled."},{name:"bt.bt-enable",section:"bluetooth",label:"Enable Bluetooth",type:"checkbox",info:"Enable or disable Bluetooth basic-rate.",cb:"bt"},{name:"bt.nfc-enable",section:"bluetooth",label:"Enable NFC",type:"checkbox",info:"Enable/disable NFC and NFC Logo LED on the front panel. By default, this is is enabled.",show:"bt.bt-enable",cb:"bt"},{name:"bt.bt-name",section:"bluetooth",label:"Device name",type:"text",show:"bt.bt-enable",info:"The Bluetooth basic-rate device name advertised over the air. By default, this is set to the product name (Yamaha CS-700) followed by the device's MAC address."},{name:"bt.bt-pin",section:"bluetooth",label:"Pairing pin",type:"text",pattern:/^(\d{4})?$/,patternMsg:"Please enter exactly 4 digits.",defaultVal:"0000",show:"bt.bt-enable",info:"The Bluetooth basic-rate pin for pairing. Pins must be exactly 4 digits. An empty field indicates that no PIN is required. By default, the PIN is set to 0000.",cb:"bt"},{name:"bt.bt-pair-timeout",section:"bluetooth",label:"Pairing and connection timeout (seconds)",type:"range",min:0,max:120,step:30,defaultVal:60,show:"bt.bt-enable",info:"Bluetooth basic-rate pairing and connecting timeout in seconds. After this time, the pairing and connecting modes will stop. A value of 0 indicates no timeout. By default, this is set to 60 seconds.",cb:"bt"},{name:"ble.ble-advertise",section:"bluetooth",field:"Wireless Dialer",label:"Enable wireless dialer",type:"checkbox",defaultVal:!0,info:"Enable or disable wireless dialer. By default, this is disabled."},{name:"cam.camera-ptz",section:"camera",label:"Active PTZ position",type:"multiNumber",dataType:"int",values:[{label:"Pan",name:"cam.camera-pan"},{label:"Tilt",name:"cam.camera-tilt"},{label:"Zoom",name:"cam.camera-zoom"}],info:"Active digital PTZ (Pan/Tilt/Zoom) positions for live camera stream. Pan and Tilt are available only when camera is zoomed in, and both revert to 0 when zoom is set to 1. By default, Pan and Tilt are set to 0 and Zoom is set to 1."},{name:"cam.cam-save-as-default",section:"camera",label:"Set PTZ Home to active position",type:"btn",info:"Save the current PTZ position as the default values (PTZ home)."},{name:"cam.camera-ptz-home",section:"camera",label:"PTZ home position",type:"multiNumber",dataType:"array",values:[{label:"Pan",min:-30,max:30},{label:"Tilt",min:-18,max:18},{label:"Zoom",min:1,max:22}],info:"Default PTZ (Pan/Tilt/Zoom) settings for home position. When the device detects that the upstream USB connection has been established, either at startup or after a USB disconnection, it will revert to the default PTZ settings. By default, Pan and Tilt are set to 0 and Zoom is set to 1."},{name:"cam.cam-apply-defaults",section:"camera",label:"Return to PTZ Home",type:"btn",info:"Apply the saved PTZ Home settings. These settings are also automatically applied when the device detects that the upstream USB connection has been established, either at startup or after a USB disconnection."},{name:"cam.camera-image",section:"camera",label:"Active image settings",type:"multiNumber",dataType:"int",values:[{label:"Backlight",name:"cam.camera-backlight"},{label:"Brightness",name:"cam.camera-brightness"},{label:"Contrast",name:"cam.camera-contrast"},{label:"Saturation",name:"cam.camera-saturation"},{label:"Sharpness",name:"cam.camera-sharpness"},{label:"Hue",name:"cam.camera-hue"},{label:"Gamma",name:"cam.camera-gamma"}],info:"Active image settings (Backlight/Brightness/Contrast/Saturation/Sharpness/Hue/Gamma) settings for live camera stream."},{name:"cam.cam-image-save-as-default",section:"camera",label:"Set image settings to active",type:"btn",info:"Save the current image settings as the default values."},{name:"cam.camera-image-defaults",section:"camera",label:"Camera Image settings",type:"multiNumber",dataType:"array",values:[{label:"Backlight",min:-10,max:300},{label:"Brightness",min:-10,max:300},{label:"Contrast",min:-10,max:300},{label:"Saturation",min:-10,max:300},{label:"Sharpness",min:-10,max:300},{label:"Hue",min:-10,max:300},{label:"Gamma",min:-10,max:300}],info:"Default  (Backlight/Brightness/Contrast/Saturation/Sharpness/Hue/Gamma) settings for image."},{name:"cam.cam-image-apply-defaults",section:"camera",label:"Return to default image settings",type:"btn",info:"Apply the saved image default settings. These settings are also automatically applied when the device detects that the upstream USB connection has been established, either at startup or after a USB disconnection."},{name:"cam.camera-flicker",section:"camera",label:"Power Line Frequency for Anti-Flicker",dataType:"int",defaultVal:2,type:"select",values:[{val:1,label:"50Hz"},{val:2,label:"60Hz"}],info:"Adjust anti-flicker according to your power line frequency."},{name:"voip.mwi",section:"calls",label:"Enable message waiting indication",type:"checkbox",cb:"sip",info:"Select this option to display the message waiting indicator (MWI) on the Dialer and to enable message waiting notifications from the PBX. The PBX must be configured to support voice mail for the registered user in order for this feature to work properly. This is unchecked by default."},{name:"voip.do-not-disturb",section:"calls",label:"Set Do not Disturb (DnD) mode",type:"checkbox",subOptHide:{id:"sys.ui-mask",val:32},info:"This will put the device in Do not Disturb mode. By default this is disabled."},{name:"voip.auto-answer",section:"calls",label:"Enable auto-answer",type:"checkbox",cb:"sip",defaultVal:0,info:"This option allows to automatically answer calls even if not physically at the location where the device is located. We recommend enabling this feature only for test purposes. Enable Auto-answer to automatically answer incoming calls. If the device is set to Do not Disturb or if there are no available lines, the Forward rules will apply. If there are no Forward rules specified, the incoming call will be sent to voice mail. If voice mail is not supported, the call will be rejected. By default this is unchecked."},{name:"audio.ring-tone",section:"calls",label:"Ring tone",defaultVal:1,type:"select",values:[{val:0,label:"Ring 1"},{val:1,label:"Ring 2"},{val:2,label:"Ring 3"},{val:3,label:"Ring 4"},{val:4,label:"Ring 5"},{val:5,label:"Ring 6"}],info:"Select from one of the six provided ring tones, Ringer 1-Ringer 6. Ringer 1 is the default ringer."},{name:"voip.vm-number",section:"calls",label:"Voicemail number",type:"text",pattern:/^[\d*#]+$/,info:"Dialing this number will allow the user to access voicemail. By default this is blank."},{name:"voip.duration",section:"calls",label:"Maximum call duration",type:"number",cb:"sip",max:10080,info:"Specify the maximum call duration in minutes. When the call duration reaches the maximum duration, the call will be automatically terminated. The maximum limit is 10,080 minutes, or 7 days. An empty field or 0 indicates no maximum, which is the default."},{name:"voip.dial-plan",section:"calls",label:"Dial plan",type:"textarea",info:"If using a dial plan, enter the dial plan string. By default there are no dial plan."},{name:"voip.always-forwarding",section:"calls",field:"Forwarding",label:"Always forward",type:"checkbox",info:"Forward all incoming calls to the specified number. By default, this is unchecked."},{name:"voip.always-forwarding-num",section:"calls",field:"Forwarding",label:"Forward number",show:"voip.always-forwarding",type:"text",required:1},{name:"voip.busy-forwarding",section:"calls",field:"Forwarding",label:"Forward on busy",type:"checkbox",info:"Forward incoming calls to the specified number if the local device is in 'Do not Disturb' mode or if both lines are busy. By default, this is unchecked."},{name:"voip.busy-forwarding-num",section:"calls",field:"Forwarding",label:"Forward number",show:"voip.busy-forwarding",type:"text",required:1},{name:"voip.noanswer-forwarding",section:"calls",field:"Forwarding",label:"Forward on no answer",type:"checkbox",info:"Forward incoming calls to the specified number if the call is not answered within the duration specified in the 'Delay on No Answer' field. By default, this is unchecked."},{name:"voip.noanswer-forwarding-num",section:"calls",field:"Forwarding",label:"Forward number",show:"voip.noanswer-forwarding",type:"text",required:1},{name:"voip.noanswer-delay",section:"calls",field:"Forwarding",label:"Delay on no answer",defaultVal:10,type:"range",max:30,min:2,show:"voip.noanswer-forwarding",info:"Specify the number of seconds to wait before forwarding an unanswered incoming call to the 'Forward on No Answer' number. The default is 10 seconds."},{name:"net.dhcp",section:"network",label:"Enable DHCP",defaultVal:1,type:"checkbox",info:"Enable or disable DHCP. If this is disabled, the Static IP Address, Subnet Mask, and Default Gateway must be provided in the fields below. By default this is enabled."},{name:"net.ip",section:"network",label:"IP address",type:"ipAddress",placeholder:"IP Address",disabled:"net.dhcp",required:1,info:"The Static IP Address is the IP address that the network administrator has assigned to this device."},{name:"net.subnet",section:"network",label:"Subnet mask",type:"ipAddress",placeholder:"IP Address",disabled:"net.dhcp",required:1,info:"Subnet Mask is used to determine the subnet to which this device belongs, for example, 255.255.255.0."},{name:"net.gateway",section:"network",label:"Default gateway",type:"ipAddress",placeholder:"IP Address",disabled:"net.dhcp",required:1,info:"The Default Gateway is this device’s default router on the IP network. It is usually the router connecting the internal network with the outside network."},{name:"net.dns1",section:"network",label:"Primary DNS",type:"ipAddress",placeholder:"IP Address",disabled:"net.dhcp",info:"This is the address of the primary Domain Name System (DNS) server that translates domain names into IP addresses. Sites often configure a primary DNS server and a secondary backup DNS server."},{name:"net.dns2",section:"network",label:"Secondary DNS",type:"ipAddress",placeholder:"IP Address",disabled:"net.dhcp",info:"This is the address of the secondary DNS server."},{name:"net.vlan",section:"network",label:"Voice VLAN",defaultVal:2,type:"select",values:[{val:0,label:"Enabled"},{val:1,label:"Disabled"},{val:2,label:"Automatic"}],info:"The Voice VLAN ID has to be specified, the system is not trying to determine the VLAN automatically. Use this setting if the device was not able to detect the VLAN environment automatically. 'Disabled' switches off VLAN capabilities. The device will only communicate using the standard IP network. 'Automatic' should be used in environments that provide a Voice VLAN with automatic detection. The device will determine the VLAN identifier and register in that network.",show:"sys.voip-capable"},{name:"net.vlan-id",section:"network",label:"VLAN ID",type:"number",defaultVal:3,min:1,max:4094,required:1,cb:"reboot",subOpt:{parent:"sys.voip-capable",id:"net.vlan",val:0},info:"Manually specify a VLAN ID value. VID range 1 to 4094, default is 3. Note per 802.1Q that VIDs 1 and 2 are reserved for specific uses."},{name:"net.dot1x-enabled",section:"network",field:"Authentication",label:"Enable 802.1x authentication",type:"checkbox",info:"Enable this option if devices require 802.1x authentication to access your network. Select the 802.1x authentication type and specify the required credentials. MD5 authentication requires a username and password. "},{name:"net.dot1x-auth-method",section:"network",field:"Authentication",label:"Authentication method",type:"select",values:[{val:"MD5",label:"MD5"}],show:"net.dot1x-enabled"},{name:"net.dot1x-anonymous-identity",section:"network",field:"Authentication",label:"Anonymous identity",type:"text",subOpt:{parent:"net.dot1x-enabled",id:"net.dot1x-auth-method",val:"peap"},required:1},{name:"net.dot1x-cert-path",section:"network",field:"Authentication",label:"CA certificate present",type:"upload",req:"dot1x",subOpt:{parent:"net.dot1x-enabled",id:"net.dot1x-auth-method",val:"peap"}},{name:"net.dot1x-identity",section:"network",field:"Authentication",label:"Username",type:"text",show:"net.dot1x-enabled",required:1},{name:"net.dot1x-password",section:"network",field:"Authentication",label:"Password",type:"password",show:"net.dot1x-enabled",required:1},{name:"sys.language",section:"region",label:"System language",defaultVal:1,type:"select",values:[{val:1,label:"English"},{val:2,label:"Español"},{val:3,label:"Deutsch"},{val:4,label:"Français"},{val:5,label:"Italiano"},{val:6,label:"Português"},{val:7,label:"中文"},{val:8,label:"日本語"}],cb:"reboot",info:"Select the device language from the list of available languages. The default language is English."},{name:"sys.region",section:"region",label:"Regional call progress tones",type:"select",values:[{val:1,label:"Argentina"},{val:2,label:"Australia"},{val:3,label:"Belgium"},{val:4,label:"Brazil"},{val:5,label:"Canada"},{val:6,label:"Chile"},{val:7,label:"China"},{val:8,label:"Costa Rica"},{val:9,label:"France"},{val:10,label:"Germany"},{val:11,label:"Hong Kong"},{val:12,label:"India"},{val:13,label:"Israel"},{val:14,label:"Italy"},{val:15,label:"Japan"},{val:16,label:"Malaysia"},{val:17,label:"Mexico"},{val:18,label:"New Zealand"},{val:19,label:"Singapore"},{val:20,label:"South Africa"},{val:21,label:"Taiwan"},{val:22,label:"United Kingdom"},{val:23,label:"USA"},{val:24,label:"Venezuela"}],info:"Select the country or region you are in, or the closest. Please change this setting from the current region to another region only if you move the unit to that different country/region, or if advised by Yamaha support to do so. The default region is USA/Canada.",show:"sys.voip-capable"},{name:"sys.time-zone",section:"region",label:"Time zone",defaultVal:6,type:"select",values:[{val:0,label:"-11:00 American Samoa"},{val:1,label:"-10:00 Hawaii"},{val:2,label:"-9:00 Alaska"},{val:3,label:"-8:00 Pacific Time"},{val:4,label:"-7:00 Mountain Time"},{val:5,label:"-6:00 Central Time"},{val:6,label:"-5:00 Eastern Time"},{val:7,label:"-4:30 Caracas"},{val:8,label:"-4:00 Atlantic Time"},{val:9,label:"-3:30 Newfoundland"},{val:10,label:"-3:00 Brazil/Argentina"},{val:11,label:"-2:00 Mid Atlantic"},{val:12,label:"-1:00 Azores"},{val:13,label:"0:00 GMT"},{val:14,label:"+1:00 Berlin/Paris"},{val:15,label:"+2:00 Athens"},{val:16,label:"+3:00 Kuwait"},{val:17,label:"+3:30 Tehran"},{val:18,label:"+4:00 Abu Dhabi"},{val:19,label:"+4:30 Kabul"},{val:20,label:"+5:00 Islamabad"},{val:21,label:"+5:30 Mumbai"},{val:22,label:"+5:45 Kathmandu"},{val:23,label:"+6:00 Dhaka"},{val:24,label:"+6:30 Yangon"},{val:25,label:"+7:00 Bangkok"},{val:26,label:"+8:00 Beijing/Hong Kong"},{val:27,label:"+9:00 Tokyo"},{val:28,label:"+9:30 Adelaide"},{val:29,label:"+10:00 Sydney"},{val:30,label:"+11:00 New Caledonia"},{val:31,label:"+12:00 Auckland"},{val:32,label:"+13:00 Nuku'alofa"}],info:"Select the local time zone, indicated as an offset from Greenwich Mean Time (GMT). The default setting is GMT -5 Eastern Standard Time."},{name:"sys.date-format",section:"region",field:"Time",label:"Date format",type:"select",values:[{val:"MM/DD/YYYY",label:"MM/DD/YYYY"},{val:"DD/MM/YYYY",label:"DD/MM/YYYY"},{val:"YYYY/MM/DD",label:"YYYY/MM/DD"}],info:"Select a date format that is appropriate for your locale. The default setting is Month/Day/Year (MM/DD/YYYY)."},{name:"sys.twenty-four-hour-time",section:"region",field:"Time",label:"Enable 24 hour time format",type:"checkbox",info:"Check this to enable 24 hour time format. This is off by default."},{name:"net.ntp-enabled",section:"region",field:"Time",label:"NTP support",type:"checkbox",info:"Check this to enable NTP support. This is off by default."},{name:"net.ntp1",section:"region",field:"Time",label:"Network time server 1",defaultVal:"time-a.nist.gov",type:"ipAddress",placeholder:"IP Address",required:1,show:"net.ntp-enabled",info:"Specifies the IP addresses of NTP (Network Time Protocol) servers. The device will provide standard NTP servers at start-up. If local NTP servers or other NTP servers should be used, provide them in these settings."},{name:"net.ntp2",section:"region",field:"Time",label:"Network time server 2",defaultVal:"time-b.nist.gov",show:"net.ntp-enabled",type:"ipAddress"},{name:"net.ntp3",section:"region",field:"Time",label:"Network time server 3",show:"net.ntp-enabled",type:"ipAddress"},{name:"net.ntp4",section:"region",field:"Time",label:"Network time server 4",show:"net.ntp-enabled",type:"ipAddress"},{name:"sys.dst-enabled",section:"region",field:"Daylight Saving",label:"Enable Daylight Saving Time adjustment",defaultVal:1,type:"checkbox",info:"Specify whether you want the system to automatically adjust the time according to your locale's DST rules. If enabled, the DST rules must be provided below. If disabled, the system will not adjust for DST. By default this is disabled."},{name:"sys.dst-start-rules",section:"region",field:"Daylight Saving",label:"Daylight Saving Time start time",show:"sys.dst-enabled",type:"DST",info:"Use the DST Start Rule options to indicate the month, week, day and hour that the time changes. In the US, this defaults to the second Sunday in March at 2 AM, when the clock is adjusted ahead 1 hour to 3 AM."},{name:"sys.dst-end-rules",section:"region",field:"Daylight Saving",label:"Daylight Saving Time end time",show:"sys.dst-enabled",type:"DST",info:"Use the DST End Rule options to indicate the month, week, day and hour that the time changes. In the US, this defaults to the first Sunday in November at 2 AM, when the clock is adjusted back 1 hour to 1 AM."},{name:"voip.registrar",section:"sip",field:"Registration",label:"Registrar",required:1,pattern:/^((http|https):\/\/)?(([a-z0-9]|[a-z0-9][a-z0-9\-]*[a-z0-9])\.)*([a-z0-9]|[a-z0-9][a-z0-9\-]*[a-z0-9])(:[0-9]*)?$/,patternMsg:"Please enter a valid IP address or domain name.",cb:"sip",info:"This is the IP address or DNS name of the SIP registrar server. This is required."},{name:"voip.registrar-backup",section:"sip",field:"Registration",label:"Backup registrar",pattern:/^((http|https):\/\/)?(([a-z0-9]|[a-z0-9][a-z0-9\-]*[a-z0-9])\.)*([a-z0-9]|[a-z0-9][a-z0-9\-]*[a-z0-9])(:[0-9]*)?$/,patternMsg:"Please enter a valid IP address or domain name.",cb:"sip",info:"This field can hold the IP address of a failover SIP registrar, it should be configured with the failover or secondary SIP registrar IP address or domain name if applicable. If no failover or secondary SIP registrar is present in the VoIP infrastructure, this field should be left blank. When this field is specified, the phone will register with the primary SIP registrar (The 'Registrar' field) if it is accessible. If the primary SIP registrar becomes inaccessible via UDP or TCP, the phone will attempt to register with the backup registrar. If the phone successfully registered with backup registrar, it will switch to the backup registrar to perform outgoing calls and receive incoming calls. While the phone is registered with the backup registrar, it will monitor the primary SIP registrar connection. Once the primary SIP registrar becomes available again, the phone will roll back to register with the primary registrar and route SIP traffic from/to the primary registrar."},{name:"voip.realm",section:"sip",field:"Registration",label:"VoIP realm",type:"text",cb:"sip",info:"This field is the realm of the credential to authenticate against the server. The value here must match the realm sent by the server in the WWW-Authenticate or Proxy-Authenticate header in the 401/407 response. Use an asterisk ('*') if the realm is not known, which will cause the endpoint to respond to any realms."},{name:"voip.proxy",section:"sip",field:"Registration",label:"Proxy",type:"text",cb:"sip",info:"Enter the outbound SIP proxy server’s IP address or name here. If there are multiple SIP proxies, separate the addresses by a comma. Also note that if the allow strict routing option is set and you have a SIP proxy that is configured for loose routing, add the ';lr' designation after the proxy’s address, for example, '10.134.129.101;lr'."},{name:"voip.reg-use-proxy",section:"sip",field:"Registration",label:"Use proxy for registration",type:"checkbox",cb:"sip",info:"Use this option to indicate whether or not the SIP proxy server(s) specified in the Proxy field should be used when registering. Selecting this option will add the listed proxy server(s) to the route headers of the SIP REGISTER request. By default, this is disabled."},{name:"voip.user",section:"sip",field:"Registration",label:"Username",required:1,type:"text",cb:"sip",info:"This is the username for the account used to authenticate with the SIP registrar and proxies. This is required."},{name:"voip.password",section:"sip",field:"Registration",label:"Password",type:"password",cb:"sip",info:"This is the password for the account used to authenticate with the SIP registrar and proxies. This is required."},{name:"voip.id",section:"sip",field:"Registration",label:"User ID",type:"text",cb:"sip",info:"ID is the device's SIP ID used for SIP registration. If this field is left blank, the Username field will be used as the ID."},{name:"voip.name",section:"sip",field:"Registration",label:"Display name",type:"text",cb:"sip",info:"Display Name is shown when you make outbound calls. If you do not provide a Display Name, the Username will be used. Please note that your IP PBX might override the Display name sent by the device and replace it with names configured in the PBX."},{name:"voip.reg-timeout",section:"sip",field:"Registration",label:"Registration timeout",placeholder:"Seconds",type:"number",defaultVal:60,min:1,max:604800,required:1,cb:"sip",info:"Registration Timeout is the optional timeout for SIP account registration, in seconds. The default is 60, and the maximum is 604800 seconds, which is 7 days."},{name:"voip.rereg-delay",section:"sip",field:"Registration",label:"Registration retry interval",placeholder:"Seconds",type:"number",defaultVal:300,min:1,max:604800,cb:"sip",info:"If SIP registration is unsuccessful, this field specified the time duration between retry attempts, in seconds. The minimum is 1, the default is 300 seconds, which is 5 minutes, and the max is 604800, which is 7 days."},{name:"voip.use-timer",section:"sip",field:"Configuration",label:"Use SIP session timers",defaultVal:1,type:"select",values:[{val:0,label:"Inactive"},{val:1,label:"Optional"},{val:2,label:"Mandatory"},{val:3,label:"Always"}],cb:"sip",info:"Specify the preference for using SIP session keep-alive timers. During a SIP session, if SIP session timers are active, the SIP User Agent (UA) periodically sends INVITE or UPDATE requests (also called refresh requests) to keep the SIP session alive. The interval and use of the keep-alive is determined at call negotiation. If one of the UAs in a call does not receive the refresh request within the expiration timeout period, it will terminate the session. The available options in the device are: Inactive – Session Timers will not be used in any session, except if explicitly required in the remote request. Optional – Session Timers will be used in all sessions whenever the remote supports and uses it. This option is the device default. Mandatory – Session Timers support will be a requirement for the remote to be able to establish a session. Always – Session Timers will always be used in all sessions, regardless of whether the remote supports or uses it or not."},{name:"voip.timer-se",section:"sip",field:"Configuration",label:"Session timers expiration",placeholder:"Seconds",defaultVal:1800,min:90,max:604800,type:"number",show:"voip.use-timer",cb:"sip",info:"The expiration period is the interval at which the device will consider the SIP session timed out if it does not receive a refresh message from the remote SIP device. At call negotiation, the nodes will negotiate the expiration period to be used for the session. If less than the session timers minimum expiration, then the session timer minimum expiration is used instead. It is measured in seconds; the default is 1800, it must be greater than 90, and the max is 604800, which is 7 days."},{name:"voip.timer-min-se",section:"sip",field:"Configuration",label:"Session timers min expiration",placeholder:"Seconds",defaultVal:90,min:90,max:604800,type:"number",show:"voip.use-timer",cb:"sip",info:"This is the minimum session timer expiration period that the device will accept when negotiating the expiration period with the remote SIP device. If the session timer expiration duration is less than this value, this value is used instead. It is measured in seconds; the default is 90, the max is 604800, which is 7 days."},{name:"voip.use-100rel",section:"sip",field:"Configuration",label:"Require reliable SIP provisional response",type:"checkbox",cb:"sip",info:"Select this option to implement reliable SIP provisional responses. By default the setting is unchecked. SIP is a request-response type of protocol with two types of responses: provisional and final. Final responses are sent reliably, using an ACK to ensure receipt. Provisional responses by default are not sent reliably and do not require an ACK; however, in some cases, such as for PSTN interoperability support, reliability of provisional types of responses is needed. Choose this option to add the PRACK (provisional ACK) message support for reliability."},{name:"voip.auto-update-nat",section:"sip",field:"Configuration",label:"Enable SIP traversal behind symmetric NAT",defaultVal:1,type:"checkbox",cb:"sip",info:"This option may be used when the device is behind a symmetric NAT (Network Address Translation). When enabled, the device will keep track of the public IP address from the response of the REGISTER request. If it detects that the address has changed, it will unregister the current Contact, update the Contact with the transport address obtained from the Via header, and register a new Contact to the SIP registrar. This option will also update the public name of the UDP transport if STUN is configured. By default this is enabled."},{name:"voip.no-refer-sub",section:"sip",field:"Configuration",label:"Suppress SIP event subscription during call transfer",type:"checkbox",cb:"sip",info:"When transferring a SIP call, the SIP REFER process automatically establishes a temporary event subscription to notify the party initiating the transfer about the receiver’s status in handling the REFER. In some cases these event subscriptions and notifications are not needed, such as when forking is not used. Enable this option to suppress the automatic event subscriptions when transferring calls. The option is disabled by default. (See IETF RFC 4488.)"},{name:"voip.allow-strict",section:"sip",field:"Configuration",label:"Allow strict routing",type:"checkbox",cb:"sip",info:'By default, proxies specified for SIP registration will be configured as loose-routing proxies. The loose-routing designation (\';lr\') will be automatically appended to each proxy address when the proxy is added to the SIP Route header. Older proxies may be strict-routing (see IETF RFC 2543), not supporting loose routing (see IETF RFC 3261). Enable this option if you are using strict-routing proxies. If this option is enabled and you are specifying one or more loose-routing proxies in the Proxy field, then you must manually add the ";lr" suffix to each loose-routing proxy address. For example, "10.134.123.101;lr".'},{name:"voip.min-size",section:"sip",field:"Configuration",label:"Minimize SIP message size",type:"checkbox",cb:"sip",info:"The SIP protocol specifies that header field names can be in the full name form or in the abbreviated form. Abbreviated form is useful when messages might be too large to be carried on the available transport, for example when exceeding UDP’s Maximum Transmission Unit (MTU). Enable this option to encode SIP headers in their short forms to reduce size. By default, the option is not enabled and SIP headers in outgoing messages will be encoded in their full names. (See SIP protocol standard, IETF RFC 3261.)"},{name:"voip.dtmf-method",section:"sip",field:"Configuration",cb:"sip",label:"DTMF signaling method",type:"select",values:[{val:0,label:"RTP (RFC2833)"},{val:1,label:"SIP INFO"},{val:2,label:"Inband"}],info:"Select the signaling method for transmitting DTMF tones, either via RTP (RFC2833), SIP INFO messages or in-band. The default is RTP."},{name:"voip.dtmf-rtp-payload-type",section:"sip",field:"Configuration",label:"DTMF RTP payload type",defaultVal:96,type:"range",min:96,max:127,cb:"sip",info:"Specify the dynamic payload type for DTMF RTP signaling. The range is 96 to 127, default value is 96."},{name:"voip.media-onhold-method",section:"sip",field:"Configuration",label:"Media on-hold method",type:"select",values:[{val:0,label:"M line only (RFC3264)"},{val:1,label:"M and C line (RFC2543)"}],cb:"sip",info:"The Media on hold method setting allows switching the Media on Hold behavior between the different RFC definitions. 'M line only (RFC3264)' implements the functionality according to RFC3264, and is the default. In the INVITE message SDP body, the attribute 'a=sendonly' is set to a designated media stream to put media on-hold. 'M and C line (RFC2543)' implements the functionality according to RFC2543. In the INVITE message SDP body, the connection line ip is set to '0.0.0.0' (e.g. 'c= IN IP4 0.0.0.0'), and the attribute 'a=inactive' is added."},{name:"voip.set-qos",section:"transport",label:"Enable QoS",type:"checkbox",cb:"sip",info:"Select this option to enable QoS (Quality of Service) tagging for SIP and media. For layer 3, at the Internet layer, the DiffServ (Differentiated Services) precedence level is Class 3. The Differentiated Services Code Point (DSCP) in the IP header is set to 24 (0x18). For layer 2, IEEE 802.1p tagging is supported. This option is unchecked by default."},{name:"voip.udp-tcp-selection",section:"transport",label:"Enable TCP transport protocol",type:"checkbox",cb:"sip",info:"Select the transport that will be enabled for SIP messages. The options are TCP or UDP. The default is UDP if it is available."},{name:"voip.local-port",section:"transport",label:"Local port",defaultVal:5060,min:1024,max:65535,type:"number",cb:"sip",info:"Specify the local port for SIP transport. The default is 5060 for UDP and TCP. (Both use the same port.) The range is 1024 to 65535."},{name:"voip.use-srtp",section:"transport",label:"Enable SRTP",type:"select",cb:"sip",values:[{val:0,label:"Disabled"},{val:1,label:"Optional"},{val:2,label:"Mandatory"}],info:"Use this setting to control Secure Real-time Transport Protocol (SRTP) usage. These are the available options: Disabled – Do not use SRTP; always use RTP. This is the default setting. Optional – Use the optional disposition for SRTP in SDP. If the remote end supports SRTP, then use SRTP; otherwise, use RTP. Mandatory – Force use of SRTP. If the remote end does not support SRTP, the call does not connect."},{name:"voip.rtp-port",section:"transport",label:"RTP port",defaultVal:4e3,min:1024,max:65535,type:"number",cb:"sip",info:"This is the base port number for RTP. The default is 4000. RTP is originated and received on even port numbers, and the associated RTCP uses the next higher odd port number. The range is 1024 to 65535."},{name:"voip.ip-addr",section:"transport",label:"SIP/RTP IP address",type:"ipAddress",placeholder:"IP Address",cb:"sip",info:"Optional. If specified, use this IP address (or hostname) as the advertised SIP and RTP address of this transport (the public address). The IP address does not have to correspond with one of the local host network interfaces; it may be the public IP address of a NAT router where port mappings have been configured for the SIP application."},{name:"voip.stun-srv",section:"transport",label:"STUN server",type:"ipAddress",placeholder:"IP Address",cb:"sip",info:"Optional. Specify the STUN (Session Traversal Utilities for NAT) server to use to determine if the device is behind a NAT, the type of NAT, and the public address of the device. The field can contain a comma separated list of servers. Each server can be a domain name, host name, or IP address, and it may contain an optional port number. (For STUN see IETF RFC 5389.)"},{name:"voip.use-ice",section:"transport",field:"ICE",label:"Enable ICE",type:"checkbox",cb:"sip",info:"Check this option to use the ICE (Interactive Connectivity Establishment) protocol for NAT traversal. This option is unchecked by default. ICE takes advantage of STUN and TURN to identify candidates (IP addresses and ports) for communication, evaluating and prioritizing the candidate pairs to select the best route. Expensive candidates, such as using a media relay, are selected only as a last resort. (For ICE see IETF RFC 5245.)"},{name:"voip.ice-regular",section:"transport",field:"ICE",label:"Enable aggressive ICE nomination",defaultVal:1,show:"voip.use-ice",type:"checkbox",cb:"sip",info:"When using ICE, select the preferred ICE Nomination Method. To validate candidate pairs (IP addresses and ports for the local and remote nodes), the device sends STUN binding requests as part of the media connectivity tests. When a candidate is nominated for use, a STUN binding request is sent with a flag indicating that the candidate pair is nominated. There are two nomination methods that can be used: Regular – For Regular Nomination, the device validates candidate pairs with initial STUN binding requests, and then selects a valid candidate pair by sending another STUN binding request with a flag indicating that the pair is nominated. Aggressive – For Aggressive Nomination, the device doesn’t wait to set the nominated flag in a second STUN binding request, but rather sets the flag in the STUN binding requests for all of the candidate pairs. The ICE processing completes when the first pair successfully passes connectivity checks. The aggressive method is faster but does not always result in the optimal path being selected. This is the default method."},{name:"voip.ice-no-rtcp",section:"transport",field:"ICE",label:"Disable RTCP",show:"voip.use-ice",type:"checkbox",cb:"sip",info:"Select this option to disable the RTCP component in ICE. This is unchecked by default."},{name:"voip.ice-max-hosts",section:"transport",field:"ICE",label:"Max allowed ICE host candidates",defaultVal:5,min:0,max:10,show:"voip.use-ice",type:"number",cb:"sip",info:"An ICE host candidate is an actual local transport address in the host. Host transport addresses are obtained by binding to attached network interfaces. These interfaces include both physical interfaces and virtual interfaces such as VPN. This option specifies the maximum number of local ICE host candidates that may be used in evaluating candidate pairs when determining the best route. The default value is 5. The range is 0 to 10. 0 indicates that there is no maximum."},{name:"voip.use-turn",section:"transport",field:"TURN",label:"Enable TURN relay",type:"checkbox",cb:"sip",info:"Select this option to enable the use of a TURN (Traversal Using Relay NAT) relay when using ICE. A TURN relay is a media relay server residing on the public internet which can relay media data packet between clients. TURN relays are used when other preferred mechanisms are not available, such as STUN or direct connectivity. The option is unchecked by default. If TURN is enabled, the TURN settings below (server, username and password) must also be specified."},{name:"voip.turn-srv",section:"transport",field:"TURN",label:"TURN server",show:"voip.use-turn",required:1,type:"ipAddress",placeholder:"IP Address",cb:"sip",info:"Specify the TURN server domain name or hostname. The format is either 'DOMAIN:PORT' or 'HOST:PORT'"},{name:"voip.turn-tcp",section:"transport",field:"TURN",label:"Use TCP connection to TURN server",show:"voip.use-turn",type:"checkbox",cb:"sip",info:"Use TCP to communicate with the TURN server rather than UDP."},{name:"voip.turn-user",section:"transport",field:"TURN",label:"TURN username",show:"voip.use-turn",required:1,type:"text",cb:"sip",info:"Specify the username to authenticate against the TURN server."},{name:"voip.turn-passwd",section:"transport",field:"TURN",label:"TURN password",show:"voip.use-turn",required:1,type:"password",cb:"sip",info:"Specify the password to authenticate against the TURN server."},{name:"sys.verbose-log-enabled",label:"Enable verbose logging",type:"checkbox"},{name:"sys.voip-capable",type:"number"}],dstValues=[{label:"Month",vals:[{val:"1",label:"January"},{val:"2",label:"February"},{val:"3",label:"March"},{val:"4",label:"April"},{val:"5",label:"May"},{val:"6",label:"June"},{val:"7",label:"July"},{val:"8",label:"August"},{val:"9",label:"September"},{val:"10",label:"October"},{val:"11",label:"November"},{val:"12",label:"December"}]},{label:"Week",vals:[{val:"1",label:"First"},{val:"2",label:"Second"},{val:"3",label:"Third"},{val:"4",label:"Fourth"},{val:"5",label:"Last"}]},{label:"Day",vals:[{val:"1",label:"Sunday"},{val:"2",label:"Monday"},{val:"3",label:"Tuesday"},{val:"4",label:"Wednesday"},{val:"5",label:"Thursday"},{val:"6",label:"Friday"},{val:"7",label:"Saturday"}]}],dstHours=[{val:"0",label:"12 AM",alt:"00:00"},{val:"1",label:"1 AM",alt:"01:00"},{val:"2",label:"2 AM",alt:"02:00"},{val:"3",label:"3 AM",alt:"03:00"},{val:"4",label:"4 AM",alt:"04:00"},{val:"5",label:"5 AM",alt:"05:00"},{val:"6",label:"6 AM",alt:"06:00"},{val:"7",label:"7 AM",alt:"07:00"},{val:"8",label:"8 AM",alt:"08:00"},{val:"9",label:"9 AM",alt:"09:00"},{val:"10",label:"10 AM",alt:"10:00"},{val:"11",label:"11 AM",alt:"11:00"},{val:"12",label:"12 PM",alt:"12:00"},{val:"13",label:"1 PM",alt:"13:00"},{val:"14",label:"2 PM",alt:"14:00"},{val:"15",label:"3 PM",alt:"15:00"},{val:"16",label:"4 PM",alt:"16:00"},{val:"17",label:"5 PM",alt:"17:00"},{val:"18",label:"6 PM",alt:"18:00"},{val:"19",label:"7 PM",alt:"19:00"},{val:"20",label:"8 PM",alt:"20:00"},{val:"21",label:"9 PM",alt:"21:00"},{val:"22",label:"10 PM",alt:"22:00"},{val:"23",label:"11 PM",alt:"23:00"}];
angular.module("r1kApp").run(["$templateCache",function(a){"use strict";a.put("app/diag/diag.html",'<div class="childState diag columns small-12"><div class=diagForm ng-repeat="form in forms"><h4>{{form.title}}</h4><div class="formItem row"><div class="columns small-12"><div class="columns small-12 medium-8 large-9" ng-switch on=form.type><label ng-switch-when=form ng-bind-html=form.info></label><md-input-container ng-switch-when=input class="columns small-12"><label>{{form.label}}</label><input ng-model=diag[form.cmd] name={{form.cmd}} ng-required=1></md-input-container></div><div class="columns small-12 medium-4 large-3"><md-button class="md-raised md-primary" aria-label=Submit ng-click=submitForm(form.cmd)>Enter Command</md-button></div></div></div></div></div>'),a.put("app/home/home.html",'<div class="childState home columns small-12"><div ng-repeat="(k, v) in squares" ng-class="$even ? \'large-offset-1\' : \'end\'" class="homeSquares columns small-12 medium-6 large-5"><h4 ng-if="(v.show == undefined || v.show != undefined && v.show == true)">{{k}} Status</h4><div class=sysData ng-if="(v.show == undefined || v.show != undefined && v.show == true)"><div ng-repeat="data in componentStatus | filter:{cat: k}" ng-switch on=data.type ng-if="(data.show == undefined || data.show != undefined && data.show == true)"><div ng-switch-when=btn><md-button class="md-raised md-primary" aria-label={{data.label}} ng-click=deviceCmd(data.prop)>{{data.label}}</md-button></div><div ng-switch-when=upgrade><h5><strong>{{data.label}}</strong>: {{currentSettings[data.val] == \'unknown\' ? upStr(currentSettings[data.prop]) : upStr(currentSettings[data.val])}}</h5></div><div ng-switch-default><h5><strong>{{data.label}}</strong>: {{upStr(currentSettings[data.prop])}}</h5></div></div></div></div><div class="homeSquares columns small-12 large-10 large-offset-1 end" ng-if="isBt "><h4 ng-switch on=btUpgrade>Bluetooth Status <span ng-switch-when=false classname=compStatus>{{upStr(btStatus)}}</span> <span ng-switch-when=true class=btProgress>Updating<md-progress-circular md-mode=determinate md-diameter=36 ng-value=btPct></md-progress-circular><span id=pct>{{btPct}}</span></span></h4><div class=sysData><div ng-repeat="data in btData" ng-switch on=data.type ng-if="(data.show == undefined || data.show != undefined && data.show == true)"><div ng-switch-when=btnlist class=btnlist><div class=pairListHeader><h5>{{data.label}}</h5><span>MAC Address</span><md-button class="md-raised md-primary" aria-label="Unpair all Devices" ng-click="deviceCmd(\'bt.bt-unpair\', \'all\')" ng-if=btPaired>Unpair all Devices</md-button><md-button class="md-raised md-primary" aria-label={{pairLabel}} ng-click=pairButton(1) ng-show="currentSettings[\'bt.bt-connected\'] == 0">{{pairLabel}}</md-button></div><ul class=pairList ng-switch on=btPaired><li class=pairItem ng-repeat="phone in btPhones" ng-switch-when=true><span class=phoneName><strong>{{phone[1]}}</strong></span> <span class=phoneMac>{{phone[0]}}</span><md-button ng-repeat="button in data.btns" ng-if="(button.conn == undefined) || (button.conn == true && phone[2])" class="md-raised md-primary" aria-label={{button.label}} ng-click="deviceCmd(button.cmd, button.mac ? phone[0] : undefined)">{{button.label}}</md-button></li><li class="pairItem noPhones" ng-switch-when=false>No phones have been paired. Click the \'Pair\' button to pair a phone.</li></ul></div><div ng-switch-default><h5><strong>{{data.label}}</strong>: {{currentSettings[data.prop] || \'None\'}}</h5></div></div></div></div><div class="homeSquares columns small-12 large-10 large-offset-1 end" ng-if="isBle "><h4 ng-switch on=btUpgrade>Wireless Dialer Status <span ng-switch-when=false classname=compStatus>{{bleStatus}}</span> <span ng-switch-when=true class=bleProgress>Updating<md-progress-circular md-mode=determinate md-diameter=36 ng-value=btPct></md-progress-circular><span id=pct>{{btPct}}</span></span></h4></div></div><!-- <div class="childState home columns small-12">\n	<div class="columns small-12 medium-6 large-5 large-offset-1">\n		<h4>System Information</h4>\n		<div class="sysData">\n			<div ng-repeat="(k,v) in deviceData"><h5><strong>{{v}}</strong>: {{currentSettings[k]}}</h5></div>\n			<md-button class="md-raised md-primary" aria-label="Restart" ng-click="restart()">Restart Device</md-button>\n		</div>\n	</div>\n	<div class="columns small-12 medium-6 large-5 end">\n		<h4>Call Status</h4>\n		<div class="sysData">\n			<div ng-repeat="(k,v) in callData"><h5><strong>{{v.label}}</strong>: {{currentSettings[v.prop]||\'Disabled\'}}</h5></div>\n		</div>\n	</div>\n</div> -->'),a.put("app/login/login.html",'<div class="loginContainer columns small-10 medium-6 large-4 xlarge-3 xxlarge-2 small-centered"><div class=revoLogo><img src=../assets/images/yamaha.png alt=Revolabs></div><form name=loginForm class="loginWrap row" novalidate ng-submit=login()><div class=loginForm><h3 class="productTitle text-center">CS-700 {{productTitle}}</h3><h5 class=loginTitle>Login:</h5><div ng-messages=auth.error><small class=error ng-message=required>You must enter a password.</small> <small class=error ng-message=noAuth>The password you entered is incorrect. Please try again.</small> <small class=error ng-message=noDevice>Unable to communicate with the device. Please ensure that it is connected to the network and powered on.</small> <small class=error ng-message=timedOut>Your session timed out. Please log in again.</small></div><!--chrmome fix for when it tires to save the wrong password for a login--><input id=browser-friendly-login-field-location autocomplete=username style="display:none"><md-input-container><label>Password</label><input type=password aria-label=Password ng-model=token ng-change=maskPass(token) name=password ng-paste=$event.preventDefault() required autofocus></md-input-container><div class="formWrap row"><div class="columns small-12 medium-8 large-8"><md-checkbox aria-label="Stay logged in" ng-model=auth.saveSession name="Save session" ng-checked={{auth.saveSession}} ng-true-value=1 ng-false-value=0><label for="Save session">Stay logged in</label></md-checkbox></div><div class="columns small-12 medium-4 large-4"><md-button class="md-raised md-primary" aria-label=Login>Login</md-button></div></div></div></form></div>'),a.put("app/main/main.html",'<div class=menu-stripe></div><div class="mainDashboard columns small-centered small-12 large-10 xlarge-8"><div class="topNav row"><div class="topBar columns small-centered small-12 large-10 xlarge-8"><div class="revoLogo columns small-4 medium-3 large-2"><a href ui-sref=main.home><img class=small-hide src=../assets/images/yamaha.png alt=Yamaha><img class="small-show iconLogo" src=../assets/images/yamaha_icon.png alt=Yamaha></a></div><div class="productHeader columns small-4 medium-6 large-8"><h3 class=productTitle>{{productTitle}} <span class=small-hide>Device Manager</span></h3></div><section class="logout columns small-4 medium-3 large-2"><a href ng-click=logout()><span class=small-hide>Logout</span> <span class=icon>&#xe692;</span></a></section></div><div class="primaryNav columns small-12" show-menu><nav class="mainNav columns small-10 medium-6 xlarge-4 small-centered"><a class="columns small-4" show-sub-menu ui-sref=main.home ui-sref-active=activeView ng-class=isDiag><span class=icon>&#xe68b;</span><span class=sectionTitle>Home</span></a> <a class="columns small-4" show-sub-menu ui-sref=main.settings.settingsForm ui-sref-active=activeView><span class=icon>&#xe68a;</span><span class=sectionTitle>Settings</span></a> <a class="columns small-4" show-sub-menu ui-sref=main.tools ui-sref-active=activeView><span class=icon>&#xe610;</span><span class=sectionTitle>Tools</span></a></nav><nav class="mainSubNav columns small-12 small-centered"><ul sub-menu=main.settings.settingsForm class=small-block-grid-{{settingsMenu}}><li ng-repeat="section in settingsSections | orderBy:\'+\'"><a ui-sref="main.settings.settingsForm({sectionId: section})" sub-menu-param ui-sref-active=activeView><h6>{{section===\'sip\'?\'SIP\':section}}</h6></a></li></ul></nav><nav class="mainSubNav columns small-12 large-10 xlarge-8 small-centered"><ul sub-menu=main.tools class=small-block-grid-{{toolsMenu}}><li ng-repeat="(key, tool) in tools" ng-if=tool.menu><a ui-sref="main.tools({toolID: key})" sub-menu-param ui-sref-active=activeView><h6>{{tool.menu}}</h6></a></li></ul></nav></div></div><div ui-view class="dashContent columns small-12"></div><div class="footer columns small-12"><p>CS-700 Device Manager &copy; Yamaha 2018. All rights reserved.</p></div></div>'),a.put("app/settings/settingsForm/settingsForm.html",'<form class="childState formGroup columns small-12" novalidate name=configForm autocomplete=off><ul class="childState-toolBar columns small-centered small-12"><li><md-button class="md-raised md-primary" aria-label=Submit ng-if=showSubmitButton ng-disabled=configForm.$pristine ng-click=submitProps()>Submit</md-button></li></ul><h4 ng-repeat-start="fields in vfields" ng-if="fields != 0">{{fields}} Settings</h4><div class="formItem row" ng-repeat="input in formData | filter:{section: currentSection, field: fields}" ng-switch on=input.type ng-repeat-end ng-if="(input.show === undefined && input.subOpt.id === undefined) || (input.subOpt.id === undefined && currentSettings[input.show]) || (((input.show === undefined && input.subOpt.parent === undefined) || currentSettings[input.subOpt.parent]) && (currentSettings[input.subOpt.id] === input.subOpt.val))"><ng-form ng-switch-when=checkbox class="checkbox columns small-12"><!--<md-checkbox ng-if="input.name === \'ble.ble-advertise\'" ng-model="cs.name" >\n				<label for="{{input.name}}">\n					{{input.label}}\n					<a aria-haspopup="true" tabindex="-1" class="has-tip icon" tooltip-placement="top" tooltip-append-to-body="true" tooltip="{{input.info}}" ng-if="input.info != undefined">&#xe681;</a>\n				</label>\n			</md-checkbox>--><md-checkbox ng-model=currentSettings[input.name] ng-checked={{currentSettings[input.name]}} name={{input.name}} ng-true-value=1 ng-false-value=0><label for={{input.name}}>{{input.label}} <a aria-haspopup=true tabindex=-1 class="has-tip icon" tooltip-placement=top tooltip-append-to-body=true tooltip={{input.info}} ng-if="input.info != undefined">&#xe681;</a></label></md-checkbox></ng-form><ng-form ng-switch-when=addCheckbox class="checkbox columns small-12" add><md-checkbox ng-repeat="(val, label) in input.values" ng-model=currentSettings[input.name] name={{input.name}} add-total={{val}} ng-true-value=1 ng-false-value=0><label for={{label}}>{{label}} <a aria-haspopup=true tabindex=-1 class="has-tip icon" tooltip-placement=top tooltip-append-to-body=true tooltip={{input.info}} ng-if="input.info != undefined">&#xe681;</a></label></md-checkbox></ng-form><ng-form ng-switch-when=range class="range columns small-10 medium-10 large-8 xlarge-6" name=$index><label for={{input.name}} class=row>{{input.label}} <a aria-haspopup=true tabindex=-1 class="has-tip icon" tooltip-placement=top tooltip-append-to-body=true tooltip={{input.info}} ng-if="input.info != undefined">&#xe681;</a></label><div class=row><div class="columns small-11 medium-9"><md-slider aria-label={{input.label}} ng-if="input.step > 0" md-discrete ng-model=currentSettings[input.name] step="{{input.step || 1}}" min="{{input.min || 0}}" max="{{input.max || 10}}"></md-slider><md-slider aria-label={{input.label}} ng-if=!input.step ng-model=currentSettings[input.name] min="{{input.min || 0}}" max="{{input.max || 10}}"></md-slider></div><div class="columns small-12 medium-3"><md-input-container><input type=number ng-model=currentSettings[input.name] name={{input.name}} min="{{input.min || 0}}" max="{{input.max || 10}}" check-step={{input.step}} step={{input.step}} sng-required=true ng-model-options="{ debounce: { \'blur\': 100 } }"></md-input-container></div><div ng-messages=$index[input.name].$error class="columns small-12 error"><small ng-message=required>This field is required.</small> <small ng-message=number>Please enter a positive number.</small> <small ng-message=min>Please enter a number greater than or equal to {{input.min || 0}}.</small> <small ng-message=max>Please enter a number less than or equal to {{input.max || 10}}.</small> <small ng-message=check>Please enter a multiple of {{input.step}}.</small></div></div></ng-form><ng-form ng-switch-when=sortable class="sortable columns small-12 medium-9 large-7 xlarge-5"><label for={{input.name}}>{{input.label}} <a aria-haspopup=true tabindex=-1 class="has-tip icon" tooltip-placement=top tooltip-append-to-body=true tooltip={{input.info}} ng-if="input.info != undefined">&#xe681;</a></label><div ng-repeat="sorter in currentSettings[input.name]" class={{sorter.name}}><label>{{sorter.name}}</label><div ng-messages=sortableErr class=error ng-if="$index == 0"><small class=error ng-message=na>There must be at least one codec enabled.</small></div><div as-sortable=dndSort class="dndSorter {{sorter.req?\'required\':\'\'}}" ng-model=sorter.props><div ng-repeat="item in sorter.props" as-sortable-item><span class=sort-handle as-sortable-item-handle><h6>{{item.label}}</h6></span></div></div></div></ng-form><ng-form ng-switch-when=DST class="dst columns small-12 large-10 xlarge-8" name=$index><label for={{input.name}}>{{input.label}} <a aria-haspopup=true tabindex=-1 class="has-tip icon" tooltip-placement=top tooltip-append-to-body=true tooltip={{input.info}} ng-if="input.info != undefined">&#xe681;</a></label><div class=row><label for={{input.name}} ng-repeat="(k, v) in dst" class="columns small-12 medium-3">{{v.label}}<select format-array=: index={{$index}} ng-model=currentSettings[input.name] name={{input.name}} ng-options="opt.val as opt.label for opt in v.vals"></select></label><label for={{input.name}} class="columns small-12 medium-3">Hour<select format-array=: index=3 ng-model=currentSettings[input.name] name={{input.name}} ng-options="opt.val as (currentSettings[\'sys.twenty-four-hour-time\']==0?opt.label:opt.alt) for opt in dstHours"></select></label></div></ng-form><ng-form ng-switch-when=multiNumber class="multiNum columns small-12 large-10 xlarge-8" name=$index><label for={{input.name}}>{{input.label}} <a aria-haspopup=true tabindex=-1 class="has-tip icon" tooltip-placement=top tooltip-append-to-body=true tooltip={{input.info}} ng-if="input.info != undefined">&#xe681;</a></label><div class=row><md-input-container ng-repeat="(k, v) in input.values" ng-switch=input.dataType class="columns small-12 medium-4"><label>{{v.label}}</label><input disabled ng-switch-when=array format-array output=num index={{$index}} ng-model=currentSettings[input.name] name={{input.name}} ng-required="{{input.required == 1}}" ng-model-options="{ allowInvalid: true }"> <input disabled ng-switch-when=int ng-model=currentSettings[v.name] name={{v.name}} ng-required="{{input.required == 1}}" ng-model-options="{ allowInvalid: true }"></md-input-container></div></ng-form><ng-form ng-switch-when=select class="columns small-12 medium-10 large-8 xlarge-6"><label for={{input.name}}>{{input.label}}</label><select id={{input.name}} class="columns small-10 large-11" ng-model=currentSettings[input.name] name={{input.name}} ng-options="opt.val as opt.label for opt in input.values"></select><div class="columns small-2 large-1"><a aria-haspopup=true tabindex=-1 class="has-tip icon" tooltip-placement=top tooltip-append-to-body=true tooltip={{input.info}} ng-if="input.info != undefined">&#xe681;</a></div></ng-form><ng-form ng-switch-when=tmp class="columns small-12 medium-10 large-8 xlarge-6"><label for={{input.name}}>{{input.label}}</label><select id={{input.name}} class="columns small-10 large-11" ng-model=currentSettings[input.name] name={{input.name}} ng-change="deviceCmd(\'cam.camera-flicker\', currentSettings[input.name]) "><option ng-repeat="opt in input.values" ng-selected="opt.val == currentSettings[input.name]" value={{opt.val}}>{{opt.label}}</option></select><div class="columns small-2 large-1"><a aria-haspopup=true tabindex=-1 class="has-tip icon" tooltip-placement=top tooltip-append-to-body=true tooltip={{input.info}} ng-if="input.info != undefined">&#xe681;</a></div></ng-form><ng-form ng-switch-when=password class="pad columns small-12 medium-10 large-8 xlarge-6" name=$index autocomplete=off><!-- Hidden fields prevent autocomplete in firefox --><!--Dont see the point of this, taking out to fix bug where inccorent usernames password save is attempted by browsers--><input style=display:none> <input type=password style=display:none><md-input-container class="columns small-10 large-11"><label>{{input.label}}</label><input type=password ng-model=currentSettings[input.name] name={{input.name}} ng-required="{{input.required == 1}}" ng-pattern=input.pattern hash-pass={{input.hash}} autocomplete={{input.name}}><div ng-messages=$index[input.name].$error><small ng-message=required>This field is required.</small> <small ng-message=pattern>The password must be at least 4 characters.</small></div></md-input-container><div class="columns small-2 large-1 end"><a aria-haspopup=true tabindex=-1 class="has-tip icon" tooltip-placement=top tooltip-append-to-body=true tooltip={{input.info}} ng-if="input.info != undefined">&#xe681;</a></div><md-input-container class="columns small-10 large-11 end" ng-if="input.name == \'sys.md5-password\' && $index[input.name].$dirty && $index[input.name].$valid "><label>Confirm new password</label><input type=password ng-model=confirm name=confirm match-to=currentSettings[input.name] hash-pass={{input.hash}} ng-model-options="{ debounce: { \'default\': 500 } }" required autocomplete=off><div ng-messages=$index.confirm.$error><small ng-message=required>This field is required.</small> <small ng-message=match>The values do not match.</small></div></md-input-container></ng-form><ng-form ng-switch-when=telnet-password class="pad columns small-12 medium-10 large-8 xlarge-6" name=$index><!-- Hidden fields prevent autocomplete in firefox --><input style=display:none> <input type=password style=display:none><md-input-container class="columns small-10 large-11"><label>{{input.label}}</label><input type=password ng-model=currentSettings[input.name] name={{input.name}} ng-required="{{input.required == 1}}" ng-pattern=input.pattern autocomplete=off><div ng-messages=$index[input.name].$error><small ng-message=required>This field is required.</small> <small ng-message=pattern>The password must be at least 4 characters.</small></div></md-input-container><div class="columns small-2 large-1 end"><a aria-haspopup=true tabindex=-1 class="has-tip icon" tooltip-placement=top tooltip-append-to-body=true tooltip={{input.info}} ng-if="input.info != undefined">&#xe681;</a></div><md-input-container class="columns small-10 large-11 end" ng-if="input.name == \'sys.telnet-password\' && $index[input.name].$dirty && $index[input.name].$valid "><label>Confirm new password</label><input type=password ng-model=confirm name=confirm match-to=currentSettings[input.name] required autocomplete=off><div ng-messages=$index.confirm.$error><small ng-message=required>This field is required.</small> <small ng-message=match>The values do not match.</small></div></md-input-container></ng-form><ng-form ng-switch-when=number class="pad columns small-12 medium-10 large-8 xlarge-6" name=$index><md-input-container class="columns small-10 large-11"><label>{{input.label}}</label><input type=number ng-model=currentSettings[input.name] name={{input.name}} ng-required="{{input.required == 1}}" min="{{input.min || 0}}" max="{{input.max || 604800}}" ng-model-options="{ debounce: { \'blur\': 100} }"><div ng-messages=$index[input.name].$error><small ng-message=required>This field is required.</small> <small ng-message=number>Please enter a positive number.</small> <small ng-message=min>Please enter a number greater than or equal to {{input.min || 0}}.</small> <small ng-message=max>Please enter a number less than or equal to {{input.max || 604800}}.</small></div></md-input-container><div class="columns small-2 large-1"><a aria-haspopup=true tabindex=-1 class="has-tip icon" tooltip-placement=top tooltip-append-to-body=true tooltip={{input.info}} ng-if="input.info != undefined">&#xe681;</a></div></ng-form><ng-form ng-switch-when=textarea class="pad columns small-12 medium-10 large-8 xlarge-6" name=$index><md-input-container class="columns small-10 large-11"><label>{{input.label}}</label><textarea ng-model=currentSettings[input.name] name={{input.name}} columns=1 ng-required="{{input.required == 1}}"></textarea><div ng-messages=$index[input.name].$error><small ng-message=required>This field is required.</small></div></md-input-container><div class="columns small-2 large-1"><a aria-haspopup=true tabindex=-1 class="has-tip icon" tooltip-placement=top tooltip-append-to-body=true tooltip={{input.info}} ng-if="input.info != undefined">&#xe681;</a></div></ng-form><ng-form ng-switch-when=upload class="checkbox upload columns small-12"><md-checkbox aria-label={{input.name}} disabled ng-model=currentSettings[input.name] has-value><label for={{input.name}}>{{input.label}} <a aria-haspopup=true tabindex=-1 class="has-tip icon" tooltip-placement=top tooltip-append-to-body=true tooltip={{input.info}} ng-if="input.info != undefined">&#xe681;</a></label></md-checkbox><md-button class="md-raised md-primary" aria-label="Upload Certificate" ng-click="uploadDialog($event, input.req, input.name)">Upload Certificate</md-button></ng-form><ng-form ng-switch-when=btn class="upload columns small-12"><md-button class="md-raised md-primary" aria-label={{input.label}} ng-click=deviceCmd(input.name)>{{input.label}}</md-button><a aria-haspopup=true tabindex=-1 class="has-tip icon" tooltip-placement=top tooltip-append-to-body=true tooltip={{input.info}} ng-if="input.info != undefined">&#xe681;</a></ng-form><ng-form ng-switch-when=ipAddress class="pad columns small-12 medium-10 large-8 xlarge-6" name=$index><md-input-container class="columns small-10 large-11"><label>{{input.label}}</label><input ng-model=currentSettings[input.name] name={{input.name}} ng-required="{{input.required == 1}}" ng-pattern="/((?=^.{4,253}$)(^((?!-)[a-zA-Z0-9-]{0,62}[a-zA-Z0-9]\\.)+[a-zA-Z]{2,63}$)|^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$)/" input-disabled=currentSettings[input.disabled]><div ng-messages=$index[input.name].$error><small ng-message=required>This field is required.</small> <small ng-message=pattern>Please enter a valid IP address or domain name.</small></div></md-input-container><div class="columns small-2 large-1"><a aria-haspopup=true tabindex=-1 class="has-tip icon" tooltip-placement=top tooltip-append-to-body=true tooltip={{input.info}} ng-if="input.info != undefined">&#xe681;</a></div></ng-form><ng-form ng-switch-default class="pad columns small-12 medium-10 large-8 xlarge-6" name=$index><md-input-container class="columns small-10 large-11"><label>{{input.label}}</label><input ng-model=currentSettings[input.name] name={{input.name}} ng-required="{{input.required == 1}}" ng-pattern=input.pattern input-disabled=currentSettings[input.disabled]><div ng-messages=$index[input.name].$error><small ng-message=required>This field is required.</small> <small ng-message=pattern>{{input.patternMsg}}</small></div></md-input-container><div class="columns small-2 large-1"><a aria-haspopup=true tabindex=-1 class="has-tip icon" tooltip-placement=top tooltip-append-to-body=true tooltip={{input.info}} ng-if="input.info != undefined">&#xe681;</a></div></ng-form><md-divider ng-if=!$first class=mdDivider></md-divider></div></form>'),a.put("app/tools/tools.html",'<div class="childState tool columns small-12"><div class=toolForm ng-repeat="form in forms"><h4 ng-if="forms.length > 1 && form.submitLabel && form.title != false">{{form.submitLabel}}</h4><md-divider ng-if="$last && !form.submitLabel" class=mdDivider></md-divider><div class="formItem row" ng-repeat="(key, input) in form.input" ng-switch on=input.type><div ng-switch-when=form class="columns small-12"><form method=POST action={{submitForm(input.reqType)}} name=export><div class="columns small-12 medium-8 large-9"><label>{{input.info}}</label></div><div class="columns small-12 medium-4 large-3"><md-button class="md-raised md-primary" aria-label=Submit>{{form.submitLabel}}</md-button></div></form></div><div ng-switch-when=file class="columns small-12"><div class="columns small-12"><div class=uploadArea ng-class=fileInfo.state ng-file-drop ng-file-select ng-model=bundle ng-file-change="dropFile($files, input.accept)" allow-dir=false allow-multiple=false><div><span class=inputDesc>Drag and drop or click here to select a file</span> <span class=fileName ng-if="fileInfo.state != \'\'">{{fileInfo.bundle.name}}</span> <span class=uploadError ng-if="fileInfo.errMsg != \'\'">{{fileInfo.errMsg}}</span> <span class=info ng-if="input.info != \'\' && fileInfo.errMsg != \'\'">{{input.info}}</span></div></div></div><div class="columns small-12 medium-4 large-3" ng-if="!dialog && input.reqType!=\'importConfig\'"><md-button class="md-raised md-primary submitFile" aria-label=Submit value={{form.submitLabel}} ng-disabled=fileInfo.noSubmit ng-click=updateFirmware(input.reqType)>{{form.submitLabel}}</md-button></div><div class="columns small-12" ng-if="dialog && input.reqType!=\'importConfig\'"><md-button class="md-raised submitFile" aria-label=Cancel value=Cancel ng-click=closeDialog()>Cancel</md-button><md-button class="md-raised md-primary submitFile" aria-label=Submit value={{form.submitLabel}} ng-disabled=fileInfo.noSubmit ng-click=updateFirmware(input.reqType)>{{form.submitLabel}}</md-button></div><div class="columns small-12 medium-4 large-3" ng-if="!dialog && input.reqType==\'importConfig\'"><md-button class="md-raised md-primary submitFile" aria-label=Submit value={{form.submitLabel}} ng-disabled=fileInfo.noSubmit ng-click=updateFirmware2(input.reqType)>{{form.submitLabel}}</md-button></div><div class="columns small-12" ng-if="dialog && input.reqType==\'importConfig\'"><md-button class="md-raised submitFile" aria-label=Cancel value=Cancel ng-click=closeDialog()>Cancel</md-button><md-button class="md-raised md-primary submitFile" aria-label=Submit value={{form.submitLabel}} ng-disabled=fileInfo.noSubmit ng-click=updateFirmware2(input.reqType)>{{form.submitLabel}}</md-button></div></div><div ng-switch-when=checkbox class="columns small-12"><div class="columns small-12 medium-8 large-9"><md-checkbox ng-model=currentSettings[key] ng-class="form.title == false?\'no-title\':\'\'" name={{key}} aria-label={{input.label}} ng-checked={{currentSettings[key]}} ng-true-value=1 ng-false-value=0><label for={{key}}>{{input.label}}</label></md-checkbox></div><div class="columns small-12 medium-4 large-3"><md-button class="md-raised md-primary" aria-label=Submit ng-click=updateSettings(newSettings)>{{form.submitLabel}}</md-button></div></div><div ng-switch-when=array class="array columns small-12"><ng-form class="columns small-12 medium-8 large-9"><md-checkbox ng-repeat="(val, label) in input.values" ng-change=resetDefaults(key) ng-model=resets[val] name={{val}} aria-label={{label}} ng-true-value=1 ng-false-value=0><label for={{val}}>{{label}}</label></md-checkbox></ng-form><div class="columns small-12 medium-4 large-3"><md-button class="md-raised md-primary" aria-label=Submit value={{form.submitLabel}} ng-disabled=!currentSettings[key].length ng-click="updateSettings(newSettings, true, cb)">{{form.submitLabel}}</md-button></div></div></div></div></div>')}]);